// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud.proto

package talk_cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 头部信息
type Head struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	SubVersion           string   `protobuf:"bytes,2,opt,name=sub_version,json=subVersion,proto3" json:"sub_version,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Head) GetSubVersion() string {
	if m != nil {
		return m.SubVersion
	}
	return ""
}

func (m *Head) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// 错误信息
type ErrorMsg struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorMsg) Reset()         { *m = ErrorMsg{} }
func (m *ErrorMsg) String() string { return proto.CompactTextString(m) }
func (*ErrorMsg) ProtoMessage()    {}
func (*ErrorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{1}
}

func (m *ErrorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMsg.Unmarshal(m, b)
}
func (m *ErrorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMsg.Marshal(b, m, deterministic)
}
func (m *ErrorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMsg.Merge(m, src)
}
func (m *ErrorMsg) XXX_Size() int {
	return xxx_messageInfo_ErrorMsg.Size(m)
}
func (m *ErrorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMsg proto.InternalMessageInfo

func (m *ErrorMsg) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrorMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// App注册请求
type AppRegReq struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppRegReq) Reset()         { *m = AppRegReq{} }
func (m *AppRegReq) String() string { return proto.CompactTextString(m) }
func (*AppRegReq) ProtoMessage()    {}
func (*AppRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{2}
}

func (m *AppRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRegReq.Unmarshal(m, b)
}
func (m *AppRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRegReq.Marshal(b, m, deterministic)
}
func (m *AppRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRegReq.Merge(m, src)
}
func (m *AppRegReq) XXX_Size() int {
	return xxx_messageInfo_AppRegReq.Size(m)
}
func (m *AppRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppRegReq proto.InternalMessageInfo

func (m *AppRegReq) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *AppRegReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppRegReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// App注册响应
type AppRegRsp struct {
	Id                   int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp            int64     `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Err                  *ErrorMsg `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AppRegRsp) Reset()         { *m = AppRegRsp{} }
func (m *AppRegRsp) String() string { return proto.CompactTextString(m) }
func (*AppRegRsp) ProtoMessage()    {}
func (*AppRegRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{3}
}

func (m *AppRegRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRegRsp.Unmarshal(m, b)
}
func (m *AppRegRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRegRsp.Marshal(b, m, deterministic)
}
func (m *AppRegRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRegRsp.Merge(m, src)
}
func (m *AppRegRsp) XXX_Size() int {
	return xxx_messageInfo_AppRegRsp.Size(m)
}
func (m *AppRegRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRegRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AppRegRsp proto.InternalMessageInfo

func (m *AppRegRsp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppRegRsp) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AppRegRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

// Device注册请求
type DeviceRegReq struct {
	AccountId            uint64   `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	DeviceList           string   `protobuf:"bytes,2,opt,name=device_list,json=deviceList,proto3" json:"device_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRegReq) Reset()         { *m = DeviceRegReq{} }
func (m *DeviceRegReq) String() string { return proto.CompactTextString(m) }
func (*DeviceRegReq) ProtoMessage()    {}
func (*DeviceRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{4}
}

func (m *DeviceRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRegReq.Unmarshal(m, b)
}
func (m *DeviceRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRegReq.Marshal(b, m, deterministic)
}
func (m *DeviceRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRegReq.Merge(m, src)
}
func (m *DeviceRegReq) XXX_Size() int {
	return xxx_messageInfo_DeviceRegReq.Size(m)
}
func (m *DeviceRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRegReq proto.InternalMessageInfo

func (m *DeviceRegReq) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *DeviceRegReq) GetDeviceList() string {
	if m != nil {
		return m.DeviceList
	}
	return ""
}

// Device注册响应
type DeviceRegRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeviceRegRsp) Reset()         { *m = DeviceRegRsp{} }
func (m *DeviceRegRsp) String() string { return proto.CompactTextString(m) }
func (*DeviceRegRsp) ProtoMessage()    {}
func (*DeviceRegRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{5}
}

func (m *DeviceRegRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRegRsp.Unmarshal(m, b)
}
func (m *DeviceRegRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRegRsp.Marshal(b, m, deterministic)
}
func (m *DeviceRegRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRegRsp.Merge(m, src)
}
func (m *DeviceRegRsp) XXX_Size() int {
	return xxx_messageInfo_DeviceRegRsp.Size(m)
}
func (m *DeviceRegRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRegRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRegRsp proto.InternalMessageInfo

func (m *DeviceRegRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

// 登录请求
type LoginReq struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{6}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *LoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type LoginRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LoginRsp) Reset()         { *m = LoginRsp{} }
func (m *LoginRsp) String() string { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()    {}
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{7}
}

func (m *LoginRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRsp.Unmarshal(m, b)
}
func (m *LoginRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRsp.Marshal(b, m, deterministic)
}
func (m *LoginRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRsp.Merge(m, src)
}
func (m *LoginRsp) XXX_Size() int {
	return xxx_messageInfo_LoginRsp.Size(m)
}
func (m *LoginRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRsp proto.InternalMessageInfo

func (m *LoginRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

// 登出请求
type LogoutReq struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutReq) Reset()         { *m = LogoutReq{} }
func (m *LogoutReq) String() string { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()    {}
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{8}
}

func (m *LogoutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutReq.Unmarshal(m, b)
}
func (m *LogoutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutReq.Marshal(b, m, deterministic)
}
func (m *LogoutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutReq.Merge(m, src)
}
func (m *LogoutReq) XXX_Size() int {
	return xxx_messageInfo_LogoutReq.Size(m)
}
func (m *LogoutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutReq.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutReq proto.InternalMessageInfo

func (m *LogoutReq) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *LogoutReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LogoutRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LogoutRsp) Reset()         { *m = LogoutRsp{} }
func (m *LogoutRsp) String() string { return proto.CompactTextString(m) }
func (*LogoutRsp) ProtoMessage()    {}
func (*LogoutRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{9}
}

func (m *LogoutRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRsp.Unmarshal(m, b)
}
func (m *LogoutRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRsp.Marshal(b, m, deterministic)
}
func (m *LogoutRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRsp.Merge(m, src)
}
func (m *LogoutRsp) XXX_Size() int {
	return xxx_messageInfo_LogoutRsp.Size(m)
}
func (m *LogoutRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRsp proto.InternalMessageInfo

func (m *LogoutRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

//************* User_Friend ************
type FriendNewReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Fuid                 uint64   `protobuf:"varint,2,opt,name=fuid,proto3" json:"fuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendNewReq) Reset()         { *m = FriendNewReq{} }
func (m *FriendNewReq) String() string { return proto.CompactTextString(m) }
func (*FriendNewReq) ProtoMessage()    {}
func (*FriendNewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{10}
}

func (m *FriendNewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendNewReq.Unmarshal(m, b)
}
func (m *FriendNewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendNewReq.Marshal(b, m, deterministic)
}
func (m *FriendNewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendNewReq.Merge(m, src)
}
func (m *FriendNewReq) XXX_Size() int {
	return xxx_messageInfo_FriendNewReq.Size(m)
}
func (m *FriendNewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendNewReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendNewReq proto.InternalMessageInfo

func (m *FriendNewReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendNewReq) GetFuid() uint64 {
	if m != nil {
		return m.Fuid
	}
	return 0
}

type FriendNewRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FriendNewRsp) Reset()         { *m = FriendNewRsp{} }
func (m *FriendNewRsp) String() string { return proto.CompactTextString(m) }
func (*FriendNewRsp) ProtoMessage()    {}
func (*FriendNewRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{11}
}

func (m *FriendNewRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendNewRsp.Unmarshal(m, b)
}
func (m *FriendNewRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendNewRsp.Marshal(b, m, deterministic)
}
func (m *FriendNewRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendNewRsp.Merge(m, src)
}
func (m *FriendNewRsp) XXX_Size() int {
	return xxx_messageInfo_FriendNewRsp.Size(m)
}
func (m *FriendNewRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendNewRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendNewRsp proto.InternalMessageInfo

func (m *FriendNewRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type FriendDelReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Fuid                 uint64   `protobuf:"varint,2,opt,name=fuid,proto3" json:"fuid,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendDelReq) Reset()         { *m = FriendDelReq{} }
func (m *FriendDelReq) String() string { return proto.CompactTextString(m) }
func (*FriendDelReq) ProtoMessage()    {}
func (*FriendDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{12}
}

func (m *FriendDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendDelReq.Unmarshal(m, b)
}
func (m *FriendDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendDelReq.Marshal(b, m, deterministic)
}
func (m *FriendDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendDelReq.Merge(m, src)
}
func (m *FriendDelReq) XXX_Size() int {
	return xxx_messageInfo_FriendDelReq.Size(m)
}
func (m *FriendDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendDelReq proto.InternalMessageInfo

func (m *FriendDelReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendDelReq) GetFuid() uint64 {
	if m != nil {
		return m.Fuid
	}
	return 0
}

func (m *FriendDelReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type FriendDelRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FriendDelRsp) Reset()         { *m = FriendDelRsp{} }
func (m *FriendDelRsp) String() string { return proto.CompactTextString(m) }
func (*FriendDelRsp) ProtoMessage()    {}
func (*FriendDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{13}
}

func (m *FriendDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendDelRsp.Unmarshal(m, b)
}
func (m *FriendDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendDelRsp.Marshal(b, m, deterministic)
}
func (m *FriendDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendDelRsp.Merge(m, src)
}
func (m *FriendDelRsp) XXX_Size() int {
	return xxx_messageInfo_FriendDelRsp.Size(m)
}
func (m *FriendDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendDelRsp proto.InternalMessageInfo

func (m *FriendDelRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type FriendsReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendsReq) Reset()         { *m = FriendsReq{} }
func (m *FriendsReq) String() string { return proto.CompactTextString(m) }
func (*FriendsReq) ProtoMessage()    {}
func (*FriendsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{14}
}

func (m *FriendsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendsReq.Unmarshal(m, b)
}
func (m *FriendsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendsReq.Marshal(b, m, deterministic)
}
func (m *FriendsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendsReq.Merge(m, src)
}
func (m *FriendsReq) XXX_Size() int {
	return xxx_messageInfo_FriendsReq.Size(m)
}
func (m *FriendsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendsReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendsReq proto.InternalMessageInfo

func (m *FriendsReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type FriendRecord struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Imei                 int64    `protobuf:"varint,3,opt,name=imei,proto3" json:"imei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendRecord) Reset()         { *m = FriendRecord{} }
func (m *FriendRecord) String() string { return proto.CompactTextString(m) }
func (*FriendRecord) ProtoMessage()    {}
func (*FriendRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{15}
}

func (m *FriendRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendRecord.Unmarshal(m, b)
}
func (m *FriendRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendRecord.Marshal(b, m, deterministic)
}
func (m *FriendRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendRecord.Merge(m, src)
}
func (m *FriendRecord) XXX_Size() int {
	return xxx_messageInfo_FriendRecord.Size(m)
}
func (m *FriendRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendRecord.DiscardUnknown(m)
}

var xxx_messageInfo_FriendRecord proto.InternalMessageInfo

func (m *FriendRecord) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendRecord) GetImei() int64 {
	if m != nil {
		return m.Imei
	}
	return 0
}

type FriendsRsp struct {
	Uid                  uint64          `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendList           []*FriendRecord `protobuf:"bytes,2,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FriendsRsp) Reset()         { *m = FriendsRsp{} }
func (m *FriendsRsp) String() string { return proto.CompactTextString(m) }
func (*FriendsRsp) ProtoMessage()    {}
func (*FriendsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{16}
}

func (m *FriendsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendsRsp.Unmarshal(m, b)
}
func (m *FriendsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendsRsp.Marshal(b, m, deterministic)
}
func (m *FriendsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendsRsp.Merge(m, src)
}
func (m *FriendsRsp) XXX_Size() int {
	return xxx_messageInfo_FriendsRsp.Size(m)
}
func (m *FriendsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendsRsp proto.InternalMessageInfo

func (m *FriendsRsp) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendsRsp) GetFriendList() []*FriendRecord {
	if m != nil {
		return m.FriendList
	}
	return nil
}

type UserSearchReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSearchReq) Reset()         { *m = UserSearchReq{} }
func (m *UserSearchReq) String() string { return proto.CompactTextString(m) }
func (*UserSearchReq) ProtoMessage()    {}
func (*UserSearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{17}
}

func (m *UserSearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSearchReq.Unmarshal(m, b)
}
func (m *UserSearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSearchReq.Marshal(b, m, deterministic)
}
func (m *UserSearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSearchReq.Merge(m, src)
}
func (m *UserSearchReq) XXX_Size() int {
	return xxx_messageInfo_UserSearchReq.Size(m)
}
func (m *UserSearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserSearchReq proto.InternalMessageInfo

func (m *UserSearchReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserSearchReq) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type UserRecord struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRecord) Reset()         { *m = UserRecord{} }
func (m *UserRecord) String() string { return proto.CompactTextString(m) }
func (*UserRecord) ProtoMessage()    {}
func (*UserRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{18}
}

func (m *UserRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRecord.Unmarshal(m, b)
}
func (m *UserRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRecord.Marshal(b, m, deterministic)
}
func (m *UserRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRecord.Merge(m, src)
}
func (m *UserRecord) XXX_Size() int {
	return xxx_messageInfo_UserRecord.Size(m)
}
func (m *UserRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRecord.DiscardUnknown(m)
}

var xxx_messageInfo_UserRecord proto.InternalMessageInfo

func (m *UserRecord) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UserSearchRsp struct {
	UserList             []*UserRecord `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UserSearchRsp) Reset()         { *m = UserSearchRsp{} }
func (m *UserSearchRsp) String() string { return proto.CompactTextString(m) }
func (*UserSearchRsp) ProtoMessage()    {}
func (*UserSearchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{19}
}

func (m *UserSearchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSearchRsp.Unmarshal(m, b)
}
func (m *UserSearchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSearchRsp.Marshal(b, m, deterministic)
}
func (m *UserSearchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSearchRsp.Merge(m, src)
}
func (m *UserSearchRsp) XXX_Size() int {
	return xxx_messageInfo_UserSearchRsp.Size(m)
}
func (m *UserSearchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSearchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UserSearchRsp proto.InternalMessageInfo

func (m *UserSearchRsp) GetUserList() []*UserRecord {
	if m != nil {
		return m.UserList
	}
	return nil
}

//*************** Group ****************
type GroupNewReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupNewReq) Reset()         { *m = GroupNewReq{} }
func (m *GroupNewReq) String() string { return proto.CompactTextString(m) }
func (*GroupNewReq) ProtoMessage()    {}
func (*GroupNewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{20}
}

func (m *GroupNewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupNewReq.Unmarshal(m, b)
}
func (m *GroupNewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupNewReq.Marshal(b, m, deterministic)
}
func (m *GroupNewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupNewReq.Merge(m, src)
}
func (m *GroupNewReq) XXX_Size() int {
	return xxx_messageInfo_GroupNewReq.Size(m)
}
func (m *GroupNewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupNewReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupNewReq proto.InternalMessageInfo

func (m *GroupNewReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GroupNewReq) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type GroupNewRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GroupNewRsp) Reset()         { *m = GroupNewRsp{} }
func (m *GroupNewRsp) String() string { return proto.CompactTextString(m) }
func (*GroupNewRsp) ProtoMessage()    {}
func (*GroupNewRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{21}
}

func (m *GroupNewRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupNewRsp.Unmarshal(m, b)
}
func (m *GroupNewRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupNewRsp.Marshal(b, m, deterministic)
}
func (m *GroupNewRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupNewRsp.Merge(m, src)
}
func (m *GroupNewRsp) XXX_Size() int {
	return xxx_messageInfo_GroupNewRsp.Size(m)
}
func (m *GroupNewRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupNewRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupNewRsp proto.InternalMessageInfo

func (m *GroupNewRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type GrpUserAddReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint64   `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpUserAddReq) Reset()         { *m = GrpUserAddReq{} }
func (m *GrpUserAddReq) String() string { return proto.CompactTextString(m) }
func (*GrpUserAddReq) ProtoMessage()    {}
func (*GrpUserAddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{22}
}

func (m *GrpUserAddReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserAddReq.Unmarshal(m, b)
}
func (m *GrpUserAddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserAddReq.Marshal(b, m, deterministic)
}
func (m *GrpUserAddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserAddReq.Merge(m, src)
}
func (m *GrpUserAddReq) XXX_Size() int {
	return xxx_messageInfo_GrpUserAddReq.Size(m)
}
func (m *GrpUserAddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserAddReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserAddReq proto.InternalMessageInfo

func (m *GrpUserAddReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GrpUserAddReq) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GrpUserAddReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GrpUserAddRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GrpUserAddRsp) Reset()         { *m = GrpUserAddRsp{} }
func (m *GrpUserAddRsp) String() string { return proto.CompactTextString(m) }
func (*GrpUserAddRsp) ProtoMessage()    {}
func (*GrpUserAddRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{23}
}

func (m *GrpUserAddRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserAddRsp.Unmarshal(m, b)
}
func (m *GrpUserAddRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserAddRsp.Marshal(b, m, deterministic)
}
func (m *GrpUserAddRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserAddRsp.Merge(m, src)
}
func (m *GrpUserAddRsp) XXX_Size() int {
	return xxx_messageInfo_GrpUserAddRsp.Size(m)
}
func (m *GrpUserAddRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserAddRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserAddRsp proto.InternalMessageInfo

func (m *GrpUserAddRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type GrpUserDelReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint64   `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpUserDelReq) Reset()         { *m = GrpUserDelReq{} }
func (m *GrpUserDelReq) String() string { return proto.CompactTextString(m) }
func (*GrpUserDelReq) ProtoMessage()    {}
func (*GrpUserDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{24}
}

func (m *GrpUserDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserDelReq.Unmarshal(m, b)
}
func (m *GrpUserDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserDelReq.Marshal(b, m, deterministic)
}
func (m *GrpUserDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserDelReq.Merge(m, src)
}
func (m *GrpUserDelReq) XXX_Size() int {
	return xxx_messageInfo_GrpUserDelReq.Size(m)
}
func (m *GrpUserDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserDelReq proto.InternalMessageInfo

func (m *GrpUserDelReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GrpUserDelReq) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GrpUserDelReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GrpUserDelRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GrpUserDelRsp) Reset()         { *m = GrpUserDelRsp{} }
func (m *GrpUserDelRsp) String() string { return proto.CompactTextString(m) }
func (*GrpUserDelRsp) ProtoMessage()    {}
func (*GrpUserDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{25}
}

func (m *GrpUserDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserDelRsp.Unmarshal(m, b)
}
func (m *GrpUserDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserDelRsp.Marshal(b, m, deterministic)
}
func (m *GrpUserDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserDelRsp.Merge(m, src)
}
func (m *GrpUserDelRsp) XXX_Size() int {
	return xxx_messageInfo_GrpUserDelRsp.Size(m)
}
func (m *GrpUserDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserDelRsp proto.InternalMessageInfo

func (m *GrpUserDelRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type UserExitReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint64   `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExitReq) Reset()         { *m = UserExitReq{} }
func (m *UserExitReq) String() string { return proto.CompactTextString(m) }
func (*UserExitReq) ProtoMessage()    {}
func (*UserExitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{26}
}

func (m *UserExitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExitReq.Unmarshal(m, b)
}
func (m *UserExitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExitReq.Marshal(b, m, deterministic)
}
func (m *UserExitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExitReq.Merge(m, src)
}
func (m *UserExitReq) XXX_Size() int {
	return xxx_messageInfo_UserExitReq.Size(m)
}
func (m *UserExitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExitReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserExitReq proto.InternalMessageInfo

func (m *UserExitReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserExitReq) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type UserExitRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserExitRsp) Reset()         { *m = UserExitRsp{} }
func (m *UserExitRsp) String() string { return proto.CompactTextString(m) }
func (*UserExitRsp) ProtoMessage()    {}
func (*UserExitRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{27}
}

func (m *UserExitRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExitRsp.Unmarshal(m, b)
}
func (m *UserExitRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExitRsp.Marshal(b, m, deterministic)
}
func (m *UserExitRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExitRsp.Merge(m, src)
}
func (m *UserExitRsp) XXX_Size() int {
	return xxx_messageInfo_UserExitRsp.Size(m)
}
func (m *UserExitRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExitRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UserExitRsp proto.InternalMessageInfo

func (m *UserExitRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type GroupDelReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RoleType             uint64   `protobuf:"varint,2,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"`
	Gid                  uint64   `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupDelReq) Reset()         { *m = GroupDelReq{} }
func (m *GroupDelReq) String() string { return proto.CompactTextString(m) }
func (*GroupDelReq) ProtoMessage()    {}
func (*GroupDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{28}
}

func (m *GroupDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDelReq.Unmarshal(m, b)
}
func (m *GroupDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDelReq.Marshal(b, m, deterministic)
}
func (m *GroupDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDelReq.Merge(m, src)
}
func (m *GroupDelReq) XXX_Size() int {
	return xxx_messageInfo_GroupDelReq.Size(m)
}
func (m *GroupDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDelReq proto.InternalMessageInfo

func (m *GroupDelReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GroupDelReq) GetRoleType() uint64 {
	if m != nil {
		return m.RoleType
	}
	return 0
}

func (m *GroupDelReq) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GroupDelRsp struct {
	Err                  *ErrorMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GroupDelRsp) Reset()         { *m = GroupDelRsp{} }
func (m *GroupDelRsp) String() string { return proto.CompactTextString(m) }
func (*GroupDelRsp) ProtoMessage()    {}
func (*GroupDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{29}
}

func (m *GroupDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDelRsp.Unmarshal(m, b)
}
func (m *GroupDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDelRsp.Marshal(b, m, deterministic)
}
func (m *GroupDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDelRsp.Merge(m, src)
}
func (m *GroupDelRsp) XXX_Size() int {
	return xxx_messageInfo_GroupDelRsp.Size(m)
}
func (m *GroupDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDelRsp proto.InternalMessageInfo

func (m *GroupDelRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type GrpListReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpListReq) Reset()         { *m = GrpListReq{} }
func (m *GrpListReq) String() string { return proto.CompactTextString(m) }
func (*GrpListReq) ProtoMessage()    {}
func (*GrpListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{30}
}

func (m *GrpListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpListReq.Unmarshal(m, b)
}
func (m *GrpListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpListReq.Marshal(b, m, deterministic)
}
func (m *GrpListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpListReq.Merge(m, src)
}
func (m *GrpListReq) XXX_Size() int {
	return xxx_messageInfo_GrpListReq.Size(m)
}
func (m *GrpListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpListReq proto.InternalMessageInfo

func (m *GrpListReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GroupRecord struct {
	Gid                  uint64   `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRecord) Reset()         { *m = GroupRecord{} }
func (m *GroupRecord) String() string { return proto.CompactTextString(m) }
func (*GroupRecord) ProtoMessage()    {}
func (*GroupRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{31}
}

func (m *GroupRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRecord.Unmarshal(m, b)
}
func (m *GroupRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRecord.Marshal(b, m, deterministic)
}
func (m *GroupRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRecord.Merge(m, src)
}
func (m *GroupRecord) XXX_Size() int {
	return xxx_messageInfo_GroupRecord.Size(m)
}
func (m *GroupRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRecord.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRecord proto.InternalMessageInfo

func (m *GroupRecord) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GroupRecord) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type GroupListRsp struct {
	Uid                  uint64         `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupList            []*GroupRecord `protobuf:"bytes,2,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	Err                  *ErrorMsg      `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GroupListRsp) Reset()         { *m = GroupListRsp{} }
func (m *GroupListRsp) String() string { return proto.CompactTextString(m) }
func (*GroupListRsp) ProtoMessage()    {}
func (*GroupListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{32}
}

func (m *GroupListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupListRsp.Unmarshal(m, b)
}
func (m *GroupListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupListRsp.Marshal(b, m, deterministic)
}
func (m *GroupListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListRsp.Merge(m, src)
}
func (m *GroupListRsp) XXX_Size() int {
	return xxx_messageInfo_GroupListRsp.Size(m)
}
func (m *GroupListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListRsp proto.InternalMessageInfo

func (m *GroupListRsp) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GroupListRsp) GetGroupList() []*GroupRecord {
	if m != nil {
		return m.GroupList
	}
	return nil
}

func (m *GroupListRsp) GetErr() *ErrorMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

type GrpSearchReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpSearchReq) Reset()         { *m = GrpSearchReq{} }
func (m *GrpSearchReq) String() string { return proto.CompactTextString(m) }
func (*GrpSearchReq) ProtoMessage()    {}
func (*GrpSearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06afdfeb457a87f, []int{33}
}

func (m *GrpSearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpSearchReq.Unmarshal(m, b)
}
func (m *GrpSearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpSearchReq.Marshal(b, m, deterministic)
}
func (m *GrpSearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpSearchReq.Merge(m, src)
}
func (m *GrpSearchReq) XXX_Size() int {
	return xxx_messageInfo_GrpSearchReq.Size(m)
}
func (m *GrpSearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpSearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpSearchReq proto.InternalMessageInfo

func (m *GrpSearchReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GrpSearchReq) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func init() {
	proto.RegisterType((*Head)(nil), "Head")
	proto.RegisterType((*ErrorMsg)(nil), "ErrorMsg")
	proto.RegisterType((*AppRegReq)(nil), "AppRegReq")
	proto.RegisterType((*AppRegRsp)(nil), "AppRegRsp")
	proto.RegisterType((*DeviceRegReq)(nil), "DeviceRegReq")
	proto.RegisterType((*DeviceRegRsp)(nil), "DeviceRegRsp")
	proto.RegisterType((*LoginReq)(nil), "LoginReq")
	proto.RegisterType((*LoginRsp)(nil), "LoginRsp")
	proto.RegisterType((*LogoutReq)(nil), "LogoutReq")
	proto.RegisterType((*LogoutRsp)(nil), "LogoutRsp")
	proto.RegisterType((*FriendNewReq)(nil), "FriendNewReq")
	proto.RegisterType((*FriendNewRsp)(nil), "FriendNewRsp")
	proto.RegisterType((*FriendDelReq)(nil), "FriendDelReq")
	proto.RegisterType((*FriendDelRsp)(nil), "FriendDelRsp")
	proto.RegisterType((*FriendsReq)(nil), "FriendsReq")
	proto.RegisterType((*FriendRecord)(nil), "FriendRecord")
	proto.RegisterType((*FriendsRsp)(nil), "FriendsRsp")
	proto.RegisterType((*UserSearchReq)(nil), "UserSearchReq")
	proto.RegisterType((*UserRecord)(nil), "UserRecord")
	proto.RegisterType((*UserSearchRsp)(nil), "UserSearchRsp")
	proto.RegisterType((*GroupNewReq)(nil), "GroupNewReq")
	proto.RegisterType((*GroupNewRsp)(nil), "GroupNewRsp")
	proto.RegisterType((*GrpUserAddReq)(nil), "GrpUserAddReq")
	proto.RegisterType((*GrpUserAddRsp)(nil), "GrpUserAddRsp")
	proto.RegisterType((*GrpUserDelReq)(nil), "GrpUserDelReq")
	proto.RegisterType((*GrpUserDelRsp)(nil), "GrpUserDelRsp")
	proto.RegisterType((*UserExitReq)(nil), "UserExitReq")
	proto.RegisterType((*UserExitRsp)(nil), "UserExitRsp")
	proto.RegisterType((*GroupDelReq)(nil), "GroupDelReq")
	proto.RegisterType((*GroupDelRsp)(nil), "GroupDelRsp")
	proto.RegisterType((*GrpListReq)(nil), "GrpListReq")
	proto.RegisterType((*GroupRecord)(nil), "GroupRecord")
	proto.RegisterType((*GroupListRsp)(nil), "GroupListRsp")
	proto.RegisterType((*GrpSearchReq)(nil), "GrpSearchReq")
}

func init() { proto.RegisterFile("talk_cloud.proto", fileDescriptor_c06afdfeb457a87f) }

var fileDescriptor_c06afdfeb457a87f = []byte{
	// 889 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x51, 0x6f, 0xdb, 0x36,
	0x10, 0x9e, 0x2d, 0x27, 0xb5, 0x4e, 0xb6, 0x61, 0xf0, 0xa1, 0xc8, 0xd4, 0x75, 0x2d, 0xf4, 0x12,
	0x6f, 0xee, 0x88, 0xd6, 0xdb, 0xc3, 0xb6, 0x87, 0x01, 0x41, 0xd3, 0xba, 0x1b, 0x32, 0x03, 0xd3,
	0xba, 0xbe, 0x1a, 0x8a, 0xc5, 0xaa, 0x5a, 0x6d, 0x53, 0x23, 0xa5, 0x74, 0xfd, 0x3b, 0xfb, 0xa5,
	0x03, 0x4f, 0xa4, 0x44, 0xa5, 0x4a, 0xe5, 0xe4, 0xed, 0x8e, 0xfc, 0xee, 0xfb, 0x8e, 0xa7, 0x3b,
	0x52, 0x30, 0xcd, 0xa3, 0xed, 0xfb, 0xf5, 0x66, 0xcb, 0x8b, 0x98, 0x66, 0x82, 0xe7, 0x3c, 0x58,
	0xc3, 0xe0, 0x15, 0x8b, 0x62, 0x72, 0x02, 0xf7, 0xae, 0x98, 0x90, 0x29, 0xdf, 0x9f, 0xf4, 0x1e,
	0xf7, 0x66, 0x6e, 0x68, 0x5c, 0xf2, 0x08, 0x3c, 0x59, 0x5c, 0xae, 0xcd, 0x6e, 0x1f, 0x77, 0x41,
	0x16, 0x97, 0x6f, 0x34, 0xe0, 0x2b, 0x70, 0xf3, 0x74, 0xc7, 0x64, 0x1e, 0xed, 0xb2, 0x13, 0xe7,
	0x71, 0x6f, 0xe6, 0x84, 0xf5, 0x42, 0xf0, 0x14, 0x86, 0x2f, 0x84, 0xe0, 0xe2, 0x77, 0x99, 0x10,
	0x02, 0x83, 0x0d, 0x8f, 0x19, 0x2a, 0x38, 0x21, 0xda, 0x64, 0x0a, 0xce, 0x4e, 0x26, 0x9a, 0x56,
	0x99, 0xc1, 0x1b, 0x70, 0xcf, 0xb2, 0x2c, 0x64, 0x49, 0xc8, 0xfe, 0x21, 0x5f, 0xc2, 0xe0, 0x1d,
	0x8b, 0x62, 0x0c, 0xf1, 0x16, 0x47, 0x54, 0x25, 0x1b, 0xe2, 0x92, 0x62, 0xdb, 0x47, 0x3b, 0xa6,
	0x43, 0xd1, 0x26, 0x3e, 0x0c, 0xb3, 0x48, 0xca, 0x0f, 0x5c, 0xc4, 0x98, 0x8a, 0x1b, 0x56, 0xbe,
	0xc5, 0x2b, 0x33, 0x32, 0x81, 0x7e, 0x1a, 0xeb, 0x44, 0xfa, 0x69, 0xdc, 0x3c, 0x44, 0xff, 0xda,
	0x21, 0xc8, 0x03, 0x70, 0x98, 0x10, 0xc8, 0xe8, 0x2d, 0x5c, 0x6a, 0x0e, 0x14, 0xaa, 0xd5, 0x60,
	0x05, 0xa3, 0x73, 0x76, 0x95, 0x6e, 0x98, 0x4e, 0xf9, 0x21, 0x40, 0xb4, 0xd9, 0xf0, 0x62, 0x9f,
	0xaf, 0xb5, 0xc4, 0x20, 0x74, 0xf5, 0xca, 0xaf, 0xb1, 0xaa, 0x67, 0x8c, 0xf0, 0xf5, 0x36, 0x95,
	0xb9, 0xa9, 0x67, 0xb9, 0x74, 0x91, 0xca, 0x3c, 0x98, 0xdb, 0x7c, 0xb2, 0x12, 0xef, 0xb5, 0x8a,
	0xff, 0x01, 0xc3, 0x0b, 0x9e, 0xa4, 0xfb, 0x3b, 0xd4, 0xea, 0x3e, 0x1c, 0x63, 0x6d, 0x4c, 0xa5,
	0xb4, 0x17, 0x9c, 0x1a, 0xca, 0x2e, 0xed, 0x9f, 0xc1, 0xbd, 0xe0, 0x09, 0x2f, 0xf2, 0xdb, 0x8b,
	0x07, 0xb3, 0x2a, 0xb6, 0x4b, 0xe5, 0x07, 0x18, 0xbd, 0x14, 0x29, 0xdb, 0xc7, 0x2b, 0xf6, 0x41,
	0x09, 0x4d, 0xc1, 0x29, 0xaa, 0xba, 0x2a, 0x53, 0xf1, 0xbf, 0x55, 0x4b, 0x7d, 0x5c, 0x42, 0x5b,
	0x15, 0xb1, 0x8e, 0xea, 0x92, 0x08, 0x0d, 0xf8, 0x9c, 0x6d, 0x0f, 0x96, 0xe8, 0xe8, 0xfb, 0xb9,
	0xcd, 0xd9, 0x95, 0xc0, 0xd7, 0x00, 0x25, 0x58, 0xb6, 0xca, 0x07, 0xaf, 0x0c, 0x59, 0xc8, 0x36,
	0x5c, 0xc4, 0xed, 0x09, 0x7e, 0xf2, 0x81, 0x09, 0x0c, 0xd2, 0x1d, 0x4b, 0x75, 0x6e, 0x68, 0x07,
	0xab, 0x5a, 0x49, 0x66, 0x2d, 0x3c, 0x14, 0xbc, 0xb7, 0xb8, 0x6f, 0xba, 0xd3, 0x99, 0x79, 0x8b,
	0x31, 0xb5, 0xd5, 0x43, 0x28, 0x11, 0xd8, 0xac, 0x3f, 0xc1, 0xf8, 0x2f, 0xc9, 0xc4, 0x9f, 0x2c,
	0x12, 0x9b, 0x77, 0xed, 0xb5, 0xbb, 0x0f, 0xc7, 0x79, 0x24, 0x12, 0x66, 0x7a, 0x5d, 0x7b, 0xc1,
	0x02, 0x40, 0x85, 0xde, 0xe6, 0x48, 0xd7, 0xe4, 0x64, 0x46, 0x66, 0xe0, 0x16, 0x92, 0x89, 0x32,
	0xdb, 0x1e, 0x66, 0xeb, 0xd1, 0x9a, 0x36, 0x1c, 0xaa, 0x5d, 0xcc, 0xf4, 0x17, 0xf0, 0x96, 0x82,
	0x17, 0xd9, 0x8d, 0x6d, 0xf4, 0x10, 0x20, 0x51, 0x80, 0xb5, 0xa5, 0xea, 0xe2, 0xca, 0x4a, 0x49,
	0x7f, 0x6b, 0xc5, 0x77, 0x4f, 0xe5, 0x78, 0x29, 0x32, 0x95, 0xc6, 0x59, 0x1c, 0xb7, 0xab, 0x4d,
	0xc1, 0x49, 0xaa, 0x86, 0x52, 0x66, 0x47, 0x3f, 0x3d, 0x69, 0x50, 0x1e, 0x9e, 0xc0, 0x8d, 0x2d,
	0x7d, 0xf7, 0x04, 0x0e, 0xe9, 0xe8, 0x67, 0xe0, 0x29, 0xe8, 0x8b, 0x7f, 0xd3, 0xfc, 0x40, 0x79,
	0x55, 0xe0, 0x2a, 0xa4, 0x8b, 0x7e, 0xa5, 0x3f, 0xc6, 0x8d, 0xa7, 0x7b, 0x00, 0xae, 0xe0, 0x5b,
	0xb6, 0xce, 0x3f, 0x66, 0x4c, 0x8b, 0x0c, 0xd5, 0xc2, 0xeb, 0x8f, 0x19, 0x33, 0xda, 0x4e, 0x43,
	0xbb, 0xe2, 0x3b, 0x60, 0x58, 0x97, 0x22, 0x53, 0x3d, 0xd5, 0x3e, 0xac, 0xa6, 0xd1, 0xea, 0xc6,
	0x4e, 0x6a, 0x40, 0xd2, 0xdd, 0x68, 0x7f, 0xc3, 0x08, 0xe3, 0x51, 0xa1, 0x75, 0x48, 0xe7, 0x86,
	0xc0, 0x9a, 0xd1, 0x11, 0xb5, 0x44, 0x35, 0x9d, 0x62, 0xf8, 0xfc, 0xdb, 0xf5, 0xa3, 0xd2, 0xca,
	0xee, 0x30, 0xbd, 0x8b, 0xff, 0x8e, 0xc0, 0x7d, 0x1d, 0x6d, 0xdf, 0x3f, 0x57, 0x3f, 0x13, 0xe4,
	0x14, 0xbc, 0xf2, 0x6d, 0x4d, 0x65, 0xce, 0x04, 0x01, 0x5a, 0xbd, 0xe0, 0x7e, 0x65, 0xcb, 0x2c,
	0xf8, 0x82, 0x3c, 0x85, 0x49, 0xf5, 0xb8, 0x95, 0xd8, 0x31, 0xb5, 0x5f, 0x4f, 0xdf, 0x76, 0x31,
	0xe2, 0x11, 0x1c, 0xe1, 0x73, 0x44, 0x5c, 0x6a, 0x5e, 0x3a, 0xdf, 0x98, 0x08, 0x08, 0xe0, 0xb8,
	0x7c, 0x4a, 0x08, 0xd0, 0xea, 0x3d, 0xf2, 0x2b, 0x1b, 0x31, 0x73, 0x70, 0xcf, 0xe2, 0xb8, 0xbc,
	0xc5, 0x88, 0xb9, 0xce, 0xca, 0x9b, 0xc0, 0xb7, 0x5d, 0x03, 0x3e, 0x67, 0xdb, 0x6b, 0xe0, 0xb2,
	0xd3, 0x7c, 0xdb, 0xd5, 0xe0, 0xf1, 0x92, 0xe5, 0x2f, 0xab, 0x1b, 0x91, 0x78, 0xb4, 0xbe, 0xca,
	0xfd, 0xda, 0x41, 0x30, 0x05, 0x28, 0x6b, 0xad, 0x1a, 0x9d, 0x4c, 0x68, 0xe3, 0xea, 0xf4, 0x1b,
	0xbe, 0x26, 0xf7, 0x9e, 0x0b, 0x16, 0xe5, 0x0c, 0xbf, 0x2d, 0xd1, 0xdf, 0x58, 0xe7, 0x6d, 0x79,
	0x08, 0xfe, 0x0e, 0xdc, 0xdf, 0x78, 0xba, 0x2f, 0xa1, 0x13, 0xda, 0xb8, 0x80, 0xfc, 0x86, 0x8f,
	0xf0, 0x67, 0x30, 0x0e, 0xd9, 0x8e, 0x5f, 0x31, 0xbd, 0x51, 0x87, 0xe8, 0xa3, 0x36, 0x7c, 0x0c,
	0x39, 0x85, 0x7b, 0x6a, 0x3a, 0x97, 0x42, 0xa5, 0x62, 0x8d, 0xb7, 0x6f, 0x79, 0x08, 0xfc, 0x06,
	0xdc, 0x8a, 0xdb, 0x64, 0xad, 0x59, 0x2d, 0x0f, 0xa1, 0x4f, 0x60, 0xb4, 0x64, 0x79, 0xd5, 0xf0,
	0xc4, 0xa3, 0xf5, 0x70, 0xf9, 0x63, 0x6a, 0x4f, 0x02, 0x9e, 0xd1, 0x2b, 0xeb, 0x53, 0x9e, 0x52,
	0xed, 0xd7, 0xdd, 0xfb, 0x09, 0xfc, 0xf2, 0x18, 0x7f, 0x72, 0xbf, 0xff, 0x3f, 0x00, 0x00, 0xff,
	0xff, 0xe3, 0x01, 0x5b, 0x01, 0xf8, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TalkCloudClient is the client API for TalkCloud service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TalkCloudClient interface {
	// 注册
	AppRegister(ctx context.Context, in *AppRegReq, opts ...grpc.CallOption) (*AppRegRsp, error)
	DeviceRegister(ctx context.Context, in *DeviceRegReq, opts ...grpc.CallOption) (*DeviceRegRsp, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRsp, error)
	Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutRsp, error)
	// 好友管理
	AddFriend(ctx context.Context, in *FriendNewReq, opts ...grpc.CallOption) (*FriendNewRsp, error)
	DelFriend(ctx context.Context, in *FriendDelReq, opts ...grpc.CallOption) (*FriendDelRsp, error)
	GetFriendList(ctx context.Context, in *FriendsReq, opts ...grpc.CallOption) (*FriendsRsp, error)
	SearchUser(ctx context.Context, in *UserSearchReq, opts ...grpc.CallOption) (*UserSearchRsp, error)
	// 组管理
	CreateGroup(ctx context.Context, in *GroupNewReq, opts ...grpc.CallOption) (*GroupNewRsp, error)
	JoinGroup(ctx context.Context, in *GrpUserAddReq, opts ...grpc.CallOption) (*GrpUserAddRsp, error)
	RemoveGrpUser(ctx context.Context, in *GrpUserDelReq, opts ...grpc.CallOption) (*GrpUserDelRsp, error)
	ExitGrp(ctx context.Context, in *UserExitReq, opts ...grpc.CallOption) (*UserExitRsp, error)
	RemoveGrp(ctx context.Context, in *GroupDelReq, opts ...grpc.CallOption) (*GroupDelRsp, error)
	GetGroupList(ctx context.Context, in *GrpListReq, opts ...grpc.CallOption) (*GroupListRsp, error)
	SearchGroup(ctx context.Context, in *GrpSearchReq, opts ...grpc.CallOption) (*GroupListRsp, error)
}

type talkCloudClient struct {
	cc *grpc.ClientConn
}

func NewTalkCloudClient(cc *grpc.ClientConn) TalkCloudClient {
	return &talkCloudClient{cc}
}

func (c *talkCloudClient) AppRegister(ctx context.Context, in *AppRegReq, opts ...grpc.CallOption) (*AppRegRsp, error) {
	out := new(AppRegRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/AppRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) DeviceRegister(ctx context.Context, in *DeviceRegReq, opts ...grpc.CallOption) (*DeviceRegRsp, error) {
	out := new(DeviceRegRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/DeviceRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRsp, error) {
	out := new(LoginRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutRsp, error) {
	out := new(LogoutRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) AddFriend(ctx context.Context, in *FriendNewReq, opts ...grpc.CallOption) (*FriendNewRsp, error) {
	out := new(FriendNewRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/AddFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) DelFriend(ctx context.Context, in *FriendDelReq, opts ...grpc.CallOption) (*FriendDelRsp, error) {
	out := new(FriendDelRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/DelFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) GetFriendList(ctx context.Context, in *FriendsReq, opts ...grpc.CallOption) (*FriendsRsp, error) {
	out := new(FriendsRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/GetFriendList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) SearchUser(ctx context.Context, in *UserSearchReq, opts ...grpc.CallOption) (*UserSearchRsp, error) {
	out := new(UserSearchRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/SearchUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) CreateGroup(ctx context.Context, in *GroupNewReq, opts ...grpc.CallOption) (*GroupNewRsp, error) {
	out := new(GroupNewRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) JoinGroup(ctx context.Context, in *GrpUserAddReq, opts ...grpc.CallOption) (*GrpUserAddRsp, error) {
	out := new(GrpUserAddRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/JoinGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) RemoveGrpUser(ctx context.Context, in *GrpUserDelReq, opts ...grpc.CallOption) (*GrpUserDelRsp, error) {
	out := new(GrpUserDelRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/RemoveGrpUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) ExitGrp(ctx context.Context, in *UserExitReq, opts ...grpc.CallOption) (*UserExitRsp, error) {
	out := new(UserExitRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/ExitGrp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) RemoveGrp(ctx context.Context, in *GroupDelReq, opts ...grpc.CallOption) (*GroupDelRsp, error) {
	out := new(GroupDelRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/RemoveGrp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) GetGroupList(ctx context.Context, in *GrpListReq, opts ...grpc.CallOption) (*GroupListRsp, error) {
	out := new(GroupListRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/GetGroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) SearchGroup(ctx context.Context, in *GrpSearchReq, opts ...grpc.CallOption) (*GroupListRsp, error) {
	out := new(GroupListRsp)
	err := c.cc.Invoke(ctx, "/TalkCloud/SearchGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TalkCloudServer is the server API for TalkCloud service.
type TalkCloudServer interface {
	// 注册
	AppRegister(context.Context, *AppRegReq) (*AppRegRsp, error)
	DeviceRegister(context.Context, *DeviceRegReq) (*DeviceRegRsp, error)
	Login(context.Context, *LoginReq) (*LoginRsp, error)
	Logout(context.Context, *LogoutReq) (*LogoutRsp, error)
	// 好友管理
	AddFriend(context.Context, *FriendNewReq) (*FriendNewRsp, error)
	DelFriend(context.Context, *FriendDelReq) (*FriendDelRsp, error)
	GetFriendList(context.Context, *FriendsReq) (*FriendsRsp, error)
	SearchUser(context.Context, *UserSearchReq) (*UserSearchRsp, error)
	// 组管理
	CreateGroup(context.Context, *GroupNewReq) (*GroupNewRsp, error)
	JoinGroup(context.Context, *GrpUserAddReq) (*GrpUserAddRsp, error)
	RemoveGrpUser(context.Context, *GrpUserDelReq) (*GrpUserDelRsp, error)
	ExitGrp(context.Context, *UserExitReq) (*UserExitRsp, error)
	RemoveGrp(context.Context, *GroupDelReq) (*GroupDelRsp, error)
	GetGroupList(context.Context, *GrpListReq) (*GroupListRsp, error)
	SearchGroup(context.Context, *GrpSearchReq) (*GroupListRsp, error)
}

// UnimplementedTalkCloudServer can be embedded to have forward compatible implementations.
type UnimplementedTalkCloudServer struct {
}

func (*UnimplementedTalkCloudServer) AppRegister(ctx context.Context, req *AppRegReq) (*AppRegRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppRegister not implemented")
}
func (*UnimplementedTalkCloudServer) DeviceRegister(ctx context.Context, req *DeviceRegReq) (*DeviceRegRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeviceRegister not implemented")
}
func (*UnimplementedTalkCloudServer) Login(ctx context.Context, req *LoginReq) (*LoginRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedTalkCloudServer) Logout(ctx context.Context, req *LogoutReq) (*LogoutRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedTalkCloudServer) AddFriend(ctx context.Context, req *FriendNewReq) (*FriendNewRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFriend not implemented")
}
func (*UnimplementedTalkCloudServer) DelFriend(ctx context.Context, req *FriendDelReq) (*FriendDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelFriend not implemented")
}
func (*UnimplementedTalkCloudServer) GetFriendList(ctx context.Context, req *FriendsReq) (*FriendsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFriendList not implemented")
}
func (*UnimplementedTalkCloudServer) SearchUser(ctx context.Context, req *UserSearchReq) (*UserSearchRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUser not implemented")
}
func (*UnimplementedTalkCloudServer) CreateGroup(ctx context.Context, req *GroupNewReq) (*GroupNewRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedTalkCloudServer) JoinGroup(ctx context.Context, req *GrpUserAddReq) (*GrpUserAddRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGroup not implemented")
}
func (*UnimplementedTalkCloudServer) RemoveGrpUser(ctx context.Context, req *GrpUserDelReq) (*GrpUserDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGrpUser not implemented")
}
func (*UnimplementedTalkCloudServer) ExitGrp(ctx context.Context, req *UserExitReq) (*UserExitRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExitGrp not implemented")
}
func (*UnimplementedTalkCloudServer) RemoveGrp(ctx context.Context, req *GroupDelReq) (*GroupDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGrp not implemented")
}
func (*UnimplementedTalkCloudServer) GetGroupList(ctx context.Context, req *GrpListReq) (*GroupListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupList not implemented")
}
func (*UnimplementedTalkCloudServer) SearchGroup(ctx context.Context, req *GrpSearchReq) (*GroupListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchGroup not implemented")
}

func RegisterTalkCloudServer(s *grpc.Server, srv TalkCloudServer) {
	s.RegisterService(&_TalkCloud_serviceDesc, srv)
}

func _TalkCloud_AppRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).AppRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/AppRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).AppRegister(ctx, req.(*AppRegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_DeviceRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceRegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).DeviceRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/DeviceRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).DeviceRegister(ctx, req.(*DeviceRegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).Logout(ctx, req.(*LogoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_AddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendNewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).AddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/AddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).AddFriend(ctx, req.(*FriendNewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_DelFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).DelFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/DelFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).DelFriend(ctx, req.(*FriendDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_GetFriendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).GetFriendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/GetFriendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).GetFriendList(ctx, req.(*FriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_SearchUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).SearchUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/SearchUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).SearchUser(ctx, req.(*UserSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupNewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).CreateGroup(ctx, req.(*GroupNewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_JoinGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpUserAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).JoinGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/JoinGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).JoinGroup(ctx, req.(*GrpUserAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_RemoveGrpUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpUserDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).RemoveGrpUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/RemoveGrpUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).RemoveGrpUser(ctx, req.(*GrpUserDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_ExitGrp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserExitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).ExitGrp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/ExitGrp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).ExitGrp(ctx, req.(*UserExitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_RemoveGrp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).RemoveGrp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/RemoveGrp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).RemoveGrp(ctx, req.(*GroupDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_GetGroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).GetGroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/GetGroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).GetGroupList(ctx, req.(*GrpListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_SearchGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).SearchGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TalkCloud/SearchGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).SearchGroup(ctx, req.(*GrpSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TalkCloud_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TalkCloud",
	HandlerType: (*TalkCloudServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppRegister",
			Handler:    _TalkCloud_AppRegister_Handler,
		},
		{
			MethodName: "DeviceRegister",
			Handler:    _TalkCloud_DeviceRegister_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _TalkCloud_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _TalkCloud_Logout_Handler,
		},
		{
			MethodName: "AddFriend",
			Handler:    _TalkCloud_AddFriend_Handler,
		},
		{
			MethodName: "DelFriend",
			Handler:    _TalkCloud_DelFriend_Handler,
		},
		{
			MethodName: "GetFriendList",
			Handler:    _TalkCloud_GetFriendList_Handler,
		},
		{
			MethodName: "SearchUser",
			Handler:    _TalkCloud_SearchUser_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _TalkCloud_CreateGroup_Handler,
		},
		{
			MethodName: "JoinGroup",
			Handler:    _TalkCloud_JoinGroup_Handler,
		},
		{
			MethodName: "RemoveGrpUser",
			Handler:    _TalkCloud_RemoveGrpUser_Handler,
		},
		{
			MethodName: "ExitGrp",
			Handler:    _TalkCloud_ExitGrp_Handler,
		},
		{
			MethodName: "RemoveGrp",
			Handler:    _TalkCloud_RemoveGrp_Handler,
		},
		{
			MethodName: "GetGroupList",
			Handler:    _TalkCloud_GetGroupList_Handler,
		},
		{
			MethodName: "SearchGroup",
			Handler:    _TalkCloud_SearchGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "talk_cloud.proto",
}
