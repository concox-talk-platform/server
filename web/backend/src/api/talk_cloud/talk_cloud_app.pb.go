// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud_app.proto

package talk_cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*************** Group ****************
type UserType int32

const (
	UserType_NORMAL_USER  UserType = 0
	UserType_MANAGER_USER UserType = 1
)

var UserType_name = map[int32]string{
	0: "NORMAL_USER",
	1: "MANAGER_USER",
}

var UserType_value = map[string]int32{
	"NORMAL_USER":  0,
	"MANAGER_USER": 1,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{0}
}

//***********Msg**********
type MsgType int32

const (
	MsgType_PLAIN_TEXT MsgType = 0
	MsgType_IMAGE      MsgType = 1
	MsgType_AUDIO      MsgType = 2
	MsgType_VIDEO      MsgType = 3
	MsgType_LOCATION   MsgType = 4
)

var MsgType_name = map[int32]string{
	0: "PLAIN_TEXT",
	1: "IMAGE",
	2: "AUDIO",
	3: "VIDEO",
	4: "LOCATION",
}

var MsgType_value = map[string]int32{
	"PLAIN_TEXT": 0,
	"IMAGE":      1,
	"AUDIO":      2,
	"VIDEO":      3,
	"LOCATION":   4,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{1}
}

type MsgStat int32

const (
	MsgStat_MSG_UNREAD MsgStat = 0
	MsgStat_MSG_READ   MsgStat = 1
)

var MsgStat_name = map[int32]string{
	0: "MSG_UNREAD",
	1: "MSG_READ",
}

var MsgStat_value = map[string]int32{
	"MSG_UNREAD": 0,
	"MSG_READ":   1,
}

func (x MsgStat) String() string {
	return proto.EnumName(MsgStat_name, int32(x))
}

func (MsgStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{2}
}

// 头部信息
type Head struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	SubVersion           string   `protobuf:"bytes,2,opt,name=sub_version,json=subVersion,proto3" json:"sub_version,omitempty"`
	Timestamp            int32    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Head) GetSubVersion() string {
	if m != nil {
		return m.SubVersion
	}
	return ""
}

func (m *Head) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// App注册请求
type AppRegReq struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppRegReq) Reset()         { *m = AppRegReq{} }
func (m *AppRegReq) String() string { return proto.CompactTextString(m) }
func (*AppRegReq) ProtoMessage()    {}
func (*AppRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{1}
}

func (m *AppRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRegReq.Unmarshal(m, b)
}
func (m *AppRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRegReq.Marshal(b, m, deterministic)
}
func (m *AppRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRegReq.Merge(m, src)
}
func (m *AppRegReq) XXX_Size() int {
	return xxx_messageInfo_AppRegReq.Size(m)
}
func (m *AppRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppRegReq proto.InternalMessageInfo

func (m *AppRegReq) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *AppRegReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppRegReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// App注册响应
type AppRegRsp struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Res                  *Result  `protobuf:"bytes,3,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppRegRsp) Reset()         { *m = AppRegRsp{} }
func (m *AppRegRsp) String() string { return proto.CompactTextString(m) }
func (*AppRegRsp) ProtoMessage()    {}
func (*AppRegRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{2}
}

func (m *AppRegRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRegRsp.Unmarshal(m, b)
}
func (m *AppRegRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRegRsp.Marshal(b, m, deterministic)
}
func (m *AppRegRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRegRsp.Merge(m, src)
}
func (m *AppRegRsp) XXX_Size() int {
	return xxx_messageInfo_AppRegRsp.Size(m)
}
func (m *AppRegRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRegRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AppRegRsp proto.InternalMessageInfo

func (m *AppRegRsp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppRegRsp) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AppRegRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// Device注册请求
type DeviceRegReq struct {
	AccountId            int32    `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	DeviceList           string   `protobuf:"bytes,2,opt,name=device_list,json=deviceList,proto3" json:"device_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRegReq) Reset()         { *m = DeviceRegReq{} }
func (m *DeviceRegReq) String() string { return proto.CompactTextString(m) }
func (*DeviceRegReq) ProtoMessage()    {}
func (*DeviceRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{3}
}

func (m *DeviceRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRegReq.Unmarshal(m, b)
}
func (m *DeviceRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRegReq.Marshal(b, m, deterministic)
}
func (m *DeviceRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRegReq.Merge(m, src)
}
func (m *DeviceRegReq) XXX_Size() int {
	return xxx_messageInfo_DeviceRegReq.Size(m)
}
func (m *DeviceRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRegReq proto.InternalMessageInfo

func (m *DeviceRegReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *DeviceRegReq) GetDeviceList() string {
	if m != nil {
		return m.DeviceList
	}
	return ""
}

// Device注册响应
type DeviceRegRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRegRsp) Reset()         { *m = DeviceRegRsp{} }
func (m *DeviceRegRsp) String() string { return proto.CompactTextString(m) }
func (*DeviceRegRsp) ProtoMessage()    {}
func (*DeviceRegRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{4}
}

func (m *DeviceRegRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRegRsp.Unmarshal(m, b)
}
func (m *DeviceRegRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRegRsp.Marshal(b, m, deterministic)
}
func (m *DeviceRegRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRegRsp.Merge(m, src)
}
func (m *DeviceRegRsp) XXX_Size() int {
	return xxx_messageInfo_DeviceRegRsp.Size(m)
}
func (m *DeviceRegRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRegRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRegRsp proto.InternalMessageInfo

func (m *DeviceRegRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// 登录请求
type LoginReq struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{5}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *LoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type LoginRsp struct {
	UserInfo             *Member         `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	FriendList           []*FriendRecord `protobuf:"bytes,2,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
	GroupList            []*GroupInfo    `protobuf:"bytes,3,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	Res                  *Result         `protobuf:"bytes,4,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoginRsp) Reset()         { *m = LoginRsp{} }
func (m *LoginRsp) String() string { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()    {}
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{6}
}

func (m *LoginRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRsp.Unmarshal(m, b)
}
func (m *LoginRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRsp.Marshal(b, m, deterministic)
}
func (m *LoginRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRsp.Merge(m, src)
}
func (m *LoginRsp) XXX_Size() int {
	return xxx_messageInfo_LoginRsp.Size(m)
}
func (m *LoginRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRsp proto.InternalMessageInfo

func (m *LoginRsp) GetUserInfo() *Member {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *LoginRsp) GetFriendList() []*FriendRecord {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *LoginRsp) GetGroupList() []*GroupInfo {
	if m != nil {
		return m.GroupList
	}
	return nil
}

func (m *LoginRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// 登录请求处理需要的数据 // 和Login的一样
type LoginReqData struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReqData) Reset()         { *m = LoginReqData{} }
func (m *LoginReqData) String() string { return proto.CompactTextString(m) }
func (*LoginReqData) ProtoMessage()    {}
func (*LoginReqData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{7}
}

func (m *LoginReqData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReqData.Unmarshal(m, b)
}
func (m *LoginReqData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReqData.Marshal(b, m, deterministic)
}
func (m *LoginReqData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReqData.Merge(m, src)
}
func (m *LoginReqData) XXX_Size() int {
	return xxx_messageInfo_LoginReqData.Size(m)
}
func (m *LoginReqData) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReqData.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReqData proto.InternalMessageInfo

func (m *LoginReqData) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *LoginReqData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginReqData) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

// 初次登录应该返回的数据   // 和之前的版本一样
type LoginRespData struct {
	UserInfo             *Member         `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	FriendList           []*FriendRecord `protobuf:"bytes,2,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
	GroupList            []*GroupInfo    `protobuf:"bytes,3,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	Res                  *Result         `protobuf:"bytes,4,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoginRespData) Reset()         { *m = LoginRespData{} }
func (m *LoginRespData) String() string { return proto.CompactTextString(m) }
func (*LoginRespData) ProtoMessage()    {}
func (*LoginRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{8}
}

func (m *LoginRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRespData.Unmarshal(m, b)
}
func (m *LoginRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRespData.Marshal(b, m, deterministic)
}
func (m *LoginRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRespData.Merge(m, src)
}
func (m *LoginRespData) XXX_Size() int {
	return xxx_messageInfo_LoginRespData.Size(m)
}
func (m *LoginRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRespData.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRespData proto.InternalMessageInfo

func (m *LoginRespData) GetUserInfo() *Member {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *LoginRespData) GetFriendList() []*FriendRecord {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *LoginRespData) GetGroupList() []*GroupInfo {
	if m != nil {
		return m.GroupList
	}
	return nil
}

func (m *LoginRespData) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// 获取ImMsg请求  // 实际用不到
type ImMsgReqData struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReceiverType         int32    `protobuf:"varint,2,opt,name=ReceiverType,proto3" json:"ReceiverType,omitempty"`
	ReceiverId           int32    `protobuf:"varint,3,opt,name=ReceiverId,proto3" json:"ReceiverId,omitempty"`
	ResourcePath         string   `protobuf:"bytes,4,opt,name=ResourcePath,proto3" json:"ResourcePath,omitempty"`
	MsgType              int32    `protobuf:"varint,5,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImMsgReqData) Reset()         { *m = ImMsgReqData{} }
func (m *ImMsgReqData) String() string { return proto.CompactTextString(m) }
func (*ImMsgReqData) ProtoMessage()    {}
func (*ImMsgReqData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{9}
}

func (m *ImMsgReqData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImMsgReqData.Unmarshal(m, b)
}
func (m *ImMsgReqData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImMsgReqData.Marshal(b, m, deterministic)
}
func (m *ImMsgReqData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImMsgReqData.Merge(m, src)
}
func (m *ImMsgReqData) XXX_Size() int {
	return xxx_messageInfo_ImMsgReqData.Size(m)
}
func (m *ImMsgReqData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImMsgReqData.DiscardUnknown(m)
}

var xxx_messageInfo_ImMsgReqData proto.InternalMessageInfo

func (m *ImMsgReqData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ImMsgReqData) GetReceiverType() int32 {
	if m != nil {
		return m.ReceiverType
	}
	return 0
}

func (m *ImMsgReqData) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *ImMsgReqData) GetResourcePath() string {
	if m != nil {
		return m.ResourcePath
	}
	return ""
}

func (m *ImMsgReqData) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

// http client 返回数据
type ImMsgRespData struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImMsgRespData) Reset()         { *m = ImMsgRespData{} }
func (m *ImMsgRespData) String() string { return proto.CompactTextString(m) }
func (*ImMsgRespData) ProtoMessage()    {}
func (*ImMsgRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{10}
}

func (m *ImMsgRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImMsgRespData.Unmarshal(m, b)
}
func (m *ImMsgRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImMsgRespData.Marshal(b, m, deterministic)
}
func (m *ImMsgRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImMsgRespData.Merge(m, src)
}
func (m *ImMsgRespData) XXX_Size() int {
	return xxx_messageInfo_ImMsgRespData.Size(m)
}
func (m *ImMsgRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImMsgRespData.DiscardUnknown(m)
}

var xxx_messageInfo_ImMsgRespData proto.InternalMessageInfo

func (m *ImMsgRespData) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// 登出请求
type LogoutReq struct {
	Head                 *Head    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutReq) Reset()         { *m = LogoutReq{} }
func (m *LogoutReq) String() string { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()    {}
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{11}
}

func (m *LogoutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutReq.Unmarshal(m, b)
}
func (m *LogoutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutReq.Marshal(b, m, deterministic)
}
func (m *LogoutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutReq.Merge(m, src)
}
func (m *LogoutReq) XXX_Size() int {
	return xxx_messageInfo_LogoutReq.Size(m)
}
func (m *LogoutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutReq.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutReq proto.InternalMessageInfo

func (m *LogoutReq) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *LogoutReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LogoutRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRsp) Reset()         { *m = LogoutRsp{} }
func (m *LogoutRsp) String() string { return proto.CompactTextString(m) }
func (*LogoutRsp) ProtoMessage()    {}
func (*LogoutRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{12}
}

func (m *LogoutRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRsp.Unmarshal(m, b)
}
func (m *LogoutRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRsp.Marshal(b, m, deterministic)
}
func (m *LogoutRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRsp.Merge(m, src)
}
func (m *LogoutRsp) XXX_Size() int {
	return xxx_messageInfo_LogoutRsp.Size(m)
}
func (m *LogoutRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRsp proto.InternalMessageInfo

func (m *LogoutRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// 设置群组锁定
type SetLockGroupIdReq struct {
	UId                  int32    `protobuf:"varint,1,opt,name=uId,proto3" json:"uId,omitempty"`
	GId                  int32    `protobuf:"varint,2,opt,name=gId,proto3" json:"gId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetLockGroupIdReq) Reset()         { *m = SetLockGroupIdReq{} }
func (m *SetLockGroupIdReq) String() string { return proto.CompactTextString(m) }
func (*SetLockGroupIdReq) ProtoMessage()    {}
func (*SetLockGroupIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{13}
}

func (m *SetLockGroupIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLockGroupIdReq.Unmarshal(m, b)
}
func (m *SetLockGroupIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLockGroupIdReq.Marshal(b, m, deterministic)
}
func (m *SetLockGroupIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLockGroupIdReq.Merge(m, src)
}
func (m *SetLockGroupIdReq) XXX_Size() int {
	return xxx_messageInfo_SetLockGroupIdReq.Size(m)
}
func (m *SetLockGroupIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLockGroupIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetLockGroupIdReq proto.InternalMessageInfo

func (m *SetLockGroupIdReq) GetUId() int32 {
	if m != nil {
		return m.UId
	}
	return 0
}

func (m *SetLockGroupIdReq) GetGId() int32 {
	if m != nil {
		return m.GId
	}
	return 0
}

type SetLockGroupIdResp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetLockGroupIdResp) Reset()         { *m = SetLockGroupIdResp{} }
func (m *SetLockGroupIdResp) String() string { return proto.CompactTextString(m) }
func (*SetLockGroupIdResp) ProtoMessage()    {}
func (*SetLockGroupIdResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{14}
}

func (m *SetLockGroupIdResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLockGroupIdResp.Unmarshal(m, b)
}
func (m *SetLockGroupIdResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLockGroupIdResp.Marshal(b, m, deterministic)
}
func (m *SetLockGroupIdResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLockGroupIdResp.Merge(m, src)
}
func (m *SetLockGroupIdResp) XXX_Size() int {
	return xxx_messageInfo_SetLockGroupIdResp.Size(m)
}
func (m *SetLockGroupIdResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLockGroupIdResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetLockGroupIdResp proto.InternalMessageInfo

func (m *SetLockGroupIdResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type KeepAliveReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ACK                  int32    `protobuf:"varint,2,opt,name=ACK,proto3" json:"ACK,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAliveReq) Reset()         { *m = KeepAliveReq{} }
func (m *KeepAliveReq) String() string { return proto.CompactTextString(m) }
func (*KeepAliveReq) ProtoMessage()    {}
func (*KeepAliveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{15}
}

func (m *KeepAliveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveReq.Unmarshal(m, b)
}
func (m *KeepAliveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveReq.Marshal(b, m, deterministic)
}
func (m *KeepAliveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveReq.Merge(m, src)
}
func (m *KeepAliveReq) XXX_Size() int {
	return xxx_messageInfo_KeepAliveReq.Size(m)
}
func (m *KeepAliveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveReq.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveReq proto.InternalMessageInfo

func (m *KeepAliveReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *KeepAliveReq) GetACK() int32 {
	if m != nil {
		return m.ACK
	}
	return 0
}

type KeepAliveResp struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SYN                  int32    `protobuf:"varint,2,opt,name=SYN,proto3" json:"SYN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAliveResp) Reset()         { *m = KeepAliveResp{} }
func (m *KeepAliveResp) String() string { return proto.CompactTextString(m) }
func (*KeepAliveResp) ProtoMessage()    {}
func (*KeepAliveResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{16}
}

func (m *KeepAliveResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveResp.Unmarshal(m, b)
}
func (m *KeepAliveResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveResp.Marshal(b, m, deterministic)
}
func (m *KeepAliveResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveResp.Merge(m, src)
}
func (m *KeepAliveResp) XXX_Size() int {
	return xxx_messageInfo_KeepAliveResp.Size(m)
}
func (m *KeepAliveResp) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveResp.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveResp proto.InternalMessageInfo

func (m *KeepAliveResp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *KeepAliveResp) GetSYN() int32 {
	if m != nil {
		return m.SYN
	}
	return 0
}

type StreamRequest struct {
	Uid                  int32           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DataType             int32           `protobuf:"varint,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Name                 string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Passwd               string          `protobuf:"bytes,5,opt,name=passwd,proto3" json:"passwd,omitempty"`
	ACK                  int32           `protobuf:"varint,3,opt,name=ACK,proto3" json:"ACK,omitempty"`
	FileDataReq          *UploadFileData `protobuf:"bytes,6,opt,name=FileDataReq,proto3" json:"FileDataReq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{17}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *StreamRequest) GetDataType() int32 {
	if m != nil {
		return m.DataType
	}
	return 0
}

func (m *StreamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamRequest) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *StreamRequest) GetACK() int32 {
	if m != nil {
		return m.ACK
	}
	return 0
}

func (m *StreamRequest) GetFileDataReq() *UploadFileData {
	if m != nil {
		return m.FileDataReq
	}
	return nil
}

type UploadFileData struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SendType             int32    `protobuf:"varint,2,opt,name=sendType,proto3" json:"sendType,omitempty"`
	ReceiverId           int32    `protobuf:"varint,3,opt,name=ReceiverId,proto3" json:"ReceiverId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileData) Reset()         { *m = UploadFileData{} }
func (m *UploadFileData) String() string { return proto.CompactTextString(m) }
func (*UploadFileData) ProtoMessage()    {}
func (*UploadFileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{18}
}

func (m *UploadFileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileData.Unmarshal(m, b)
}
func (m *UploadFileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileData.Marshal(b, m, deterministic)
}
func (m *UploadFileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileData.Merge(m, src)
}
func (m *UploadFileData) XXX_Size() int {
	return xxx_messageInfo_UploadFileData.Size(m)
}
func (m *UploadFileData) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileData.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileData proto.InternalMessageInfo

func (m *UploadFileData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UploadFileData) GetSendType() int32 {
	if m != nil {
		return m.SendType
	}
	return 0
}

func (m *UploadFileData) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

type ImReceiver struct {
	Type                 int32      `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	GroupInfo            *GroupInfo `protobuf:"bytes,2,opt,name=groupInfo,proto3" json:"groupInfo,omitempty"`
	UserInfo             *Member    `protobuf:"bytes,3,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImReceiver) Reset()         { *m = ImReceiver{} }
func (m *ImReceiver) String() string { return proto.CompactTextString(m) }
func (*ImReceiver) ProtoMessage()    {}
func (*ImReceiver) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{19}
}

func (m *ImReceiver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImReceiver.Unmarshal(m, b)
}
func (m *ImReceiver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImReceiver.Marshal(b, m, deterministic)
}
func (m *ImReceiver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImReceiver.Merge(m, src)
}
func (m *ImReceiver) XXX_Size() int {
	return xxx_messageInfo_ImReceiver.Size(m)
}
func (m *ImReceiver) XXX_DiscardUnknown() {
	xxx_messageInfo_ImReceiver.DiscardUnknown(m)
}

var xxx_messageInfo_ImReceiver proto.InternalMessageInfo

func (m *ImReceiver) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ImReceiver) GetGroupInfo() *GroupInfo {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

func (m *ImReceiver) GetUserInfo() *Member {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type StreamResponse struct {
	Uid                  int32           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DataType             int32           `protobuf:"varint,2,opt,name=DataType,proto3" json:"DataType,omitempty"`
	LoginResp            *FirstLoginData `protobuf:"bytes,3,opt,name=loginResp,proto3" json:"loginResp,omitempty"`
	ImMsgData            *ImMsgReqData   `protobuf:"bytes,4,opt,name=imMsgData,proto3" json:"imMsgData,omitempty"`
	KeepAlive            *KeepAlive      `protobuf:"bytes,5,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`
	Res                  *Result         `protobuf:"bytes,6,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{20}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *StreamResponse) GetDataType() int32 {
	if m != nil {
		return m.DataType
	}
	return 0
}

func (m *StreamResponse) GetLoginResp() *FirstLoginData {
	if m != nil {
		return m.LoginResp
	}
	return nil
}

func (m *StreamResponse) GetImMsgData() *ImMsgReqData {
	if m != nil {
		return m.ImMsgData
	}
	return nil
}

func (m *StreamResponse) GetKeepAlive() *KeepAlive {
	if m != nil {
		return m.KeepAlive
	}
	return nil
}

func (m *StreamResponse) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type FirstLoginData struct {
	UserInfo             *Member         `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	FriendList           []*FriendRecord `protobuf:"bytes,2,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
	GroupList            []*GroupInfo    `protobuf:"bytes,3,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FirstLoginData) Reset()         { *m = FirstLoginData{} }
func (m *FirstLoginData) String() string { return proto.CompactTextString(m) }
func (*FirstLoginData) ProtoMessage()    {}
func (*FirstLoginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{21}
}

func (m *FirstLoginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirstLoginData.Unmarshal(m, b)
}
func (m *FirstLoginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirstLoginData.Marshal(b, m, deterministic)
}
func (m *FirstLoginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirstLoginData.Merge(m, src)
}
func (m *FirstLoginData) XXX_Size() int {
	return xxx_messageInfo_FirstLoginData.Size(m)
}
func (m *FirstLoginData) XXX_DiscardUnknown() {
	xxx_messageInfo_FirstLoginData.DiscardUnknown(m)
}

var xxx_messageInfo_FirstLoginData proto.InternalMessageInfo

func (m *FirstLoginData) GetUserInfo() *Member {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *FirstLoginData) GetFriendList() []*FriendRecord {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *FirstLoginData) GetGroupList() []*GroupInfo {
	if m != nil {
		return m.GroupList
	}
	return nil
}

type KeepAlive struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SYN                  int32    `protobuf:"varint,2,opt,name=SYN,proto3" json:"SYN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAlive) Reset()         { *m = KeepAlive{} }
func (m *KeepAlive) String() string { return proto.CompactTextString(m) }
func (*KeepAlive) ProtoMessage()    {}
func (*KeepAlive) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{22}
}

func (m *KeepAlive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAlive.Unmarshal(m, b)
}
func (m *KeepAlive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAlive.Marshal(b, m, deterministic)
}
func (m *KeepAlive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAlive.Merge(m, src)
}
func (m *KeepAlive) XXX_Size() int {
	return xxx_messageInfo_KeepAlive.Size(m)
}
func (m *KeepAlive) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAlive.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAlive proto.InternalMessageInfo

func (m *KeepAlive) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *KeepAlive) GetSYN() int32 {
	if m != nil {
		return m.SYN
	}
	return 0
}

type ImMsgData struct {
	Uid                  int32       `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Path                 string      `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Receiver             *ImReceiver `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ImMsgData) Reset()         { *m = ImMsgData{} }
func (m *ImMsgData) String() string { return proto.CompactTextString(m) }
func (*ImMsgData) ProtoMessage()    {}
func (*ImMsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{23}
}

func (m *ImMsgData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImMsgData.Unmarshal(m, b)
}
func (m *ImMsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImMsgData.Marshal(b, m, deterministic)
}
func (m *ImMsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImMsgData.Merge(m, src)
}
func (m *ImMsgData) XXX_Size() int {
	return xxx_messageInfo_ImMsgData.Size(m)
}
func (m *ImMsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImMsgData.DiscardUnknown(m)
}

var xxx_messageInfo_ImMsgData proto.InternalMessageInfo

func (m *ImMsgData) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ImMsgData) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ImMsgData) GetReceiver() *ImReceiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

//************* User_Friend ************
type FriendNewReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Fuid                 int32    `protobuf:"varint,2,opt,name=fuid,proto3" json:"fuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendNewReq) Reset()         { *m = FriendNewReq{} }
func (m *FriendNewReq) String() string { return proto.CompactTextString(m) }
func (*FriendNewReq) ProtoMessage()    {}
func (*FriendNewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{24}
}

func (m *FriendNewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendNewReq.Unmarshal(m, b)
}
func (m *FriendNewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendNewReq.Marshal(b, m, deterministic)
}
func (m *FriendNewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendNewReq.Merge(m, src)
}
func (m *FriendNewReq) XXX_Size() int {
	return xxx_messageInfo_FriendNewReq.Size(m)
}
func (m *FriendNewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendNewReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendNewReq proto.InternalMessageInfo

func (m *FriendNewReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendNewReq) GetFuid() int32 {
	if m != nil {
		return m.Fuid
	}
	return 0
}

type FriendNewRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendNewRsp) Reset()         { *m = FriendNewRsp{} }
func (m *FriendNewRsp) String() string { return proto.CompactTextString(m) }
func (*FriendNewRsp) ProtoMessage()    {}
func (*FriendNewRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{25}
}

func (m *FriendNewRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendNewRsp.Unmarshal(m, b)
}
func (m *FriendNewRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendNewRsp.Marshal(b, m, deterministic)
}
func (m *FriendNewRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendNewRsp.Merge(m, src)
}
func (m *FriendNewRsp) XXX_Size() int {
	return xxx_messageInfo_FriendNewRsp.Size(m)
}
func (m *FriendNewRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendNewRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendNewRsp proto.InternalMessageInfo

func (m *FriendNewRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type FriendDelReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Fuid                 int32    `protobuf:"varint,2,opt,name=fuid,proto3" json:"fuid,omitempty"`
	Timestamp            int32    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendDelReq) Reset()         { *m = FriendDelReq{} }
func (m *FriendDelReq) String() string { return proto.CompactTextString(m) }
func (*FriendDelReq) ProtoMessage()    {}
func (*FriendDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{26}
}

func (m *FriendDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendDelReq.Unmarshal(m, b)
}
func (m *FriendDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendDelReq.Marshal(b, m, deterministic)
}
func (m *FriendDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendDelReq.Merge(m, src)
}
func (m *FriendDelReq) XXX_Size() int {
	return xxx_messageInfo_FriendDelReq.Size(m)
}
func (m *FriendDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendDelReq proto.InternalMessageInfo

func (m *FriendDelReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendDelReq) GetFuid() int32 {
	if m != nil {
		return m.Fuid
	}
	return 0
}

func (m *FriendDelReq) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type FriendDelRsp struct {
	Err                  *Result  `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendDelRsp) Reset()         { *m = FriendDelRsp{} }
func (m *FriendDelRsp) String() string { return proto.CompactTextString(m) }
func (*FriendDelRsp) ProtoMessage()    {}
func (*FriendDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{27}
}

func (m *FriendDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendDelRsp.Unmarshal(m, b)
}
func (m *FriendDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendDelRsp.Marshal(b, m, deterministic)
}
func (m *FriendDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendDelRsp.Merge(m, src)
}
func (m *FriendDelRsp) XXX_Size() int {
	return xxx_messageInfo_FriendDelRsp.Size(m)
}
func (m *FriendDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendDelRsp proto.InternalMessageInfo

func (m *FriendDelRsp) GetErr() *Result {
	if m != nil {
		return m.Err
	}
	return nil
}

type FriendsReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendsReq) Reset()         { *m = FriendsReq{} }
func (m *FriendsReq) String() string { return proto.CompactTextString(m) }
func (*FriendsReq) ProtoMessage()    {}
func (*FriendsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{28}
}

func (m *FriendsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendsReq.Unmarshal(m, b)
}
func (m *FriendsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendsReq.Marshal(b, m, deterministic)
}
func (m *FriendsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendsReq.Merge(m, src)
}
func (m *FriendsReq) XXX_Size() int {
	return xxx_messageInfo_FriendsReq.Size(m)
}
func (m *FriendsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendsReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendsReq proto.InternalMessageInfo

func (m *FriendsReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type FriendRecord struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Imei                 int64    `protobuf:"varint,3,opt,name=imei,proto3" json:"imei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendRecord) Reset()         { *m = FriendRecord{} }
func (m *FriendRecord) String() string { return proto.CompactTextString(m) }
func (*FriendRecord) ProtoMessage()    {}
func (*FriendRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{29}
}

func (m *FriendRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendRecord.Unmarshal(m, b)
}
func (m *FriendRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendRecord.Marshal(b, m, deterministic)
}
func (m *FriendRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendRecord.Merge(m, src)
}
func (m *FriendRecord) XXX_Size() int {
	return xxx_messageInfo_FriendRecord.Size(m)
}
func (m *FriendRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendRecord.DiscardUnknown(m)
}

var xxx_messageInfo_FriendRecord proto.InternalMessageInfo

func (m *FriendRecord) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendRecord) GetImei() int64 {
	if m != nil {
		return m.Imei
	}
	return 0
}

type FriendsRsp struct {
	Uid                  int32           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendList           []*FriendRecord `protobuf:"bytes,2,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
	Res                  *Result         `protobuf:"bytes,3,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FriendsRsp) Reset()         { *m = FriendsRsp{} }
func (m *FriendsRsp) String() string { return proto.CompactTextString(m) }
func (*FriendsRsp) ProtoMessage()    {}
func (*FriendsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{30}
}

func (m *FriendsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendsRsp.Unmarshal(m, b)
}
func (m *FriendsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendsRsp.Marshal(b, m, deterministic)
}
func (m *FriendsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendsRsp.Merge(m, src)
}
func (m *FriendsRsp) XXX_Size() int {
	return xxx_messageInfo_FriendsRsp.Size(m)
}
func (m *FriendsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendsRsp proto.InternalMessageInfo

func (m *FriendsRsp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendsRsp) GetFriendList() []*FriendRecord {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *FriendsRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type UserSearchReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSearchReq) Reset()         { *m = UserSearchReq{} }
func (m *UserSearchReq) String() string { return proto.CompactTextString(m) }
func (*UserSearchReq) ProtoMessage()    {}
func (*UserSearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{31}
}

func (m *UserSearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSearchReq.Unmarshal(m, b)
}
func (m *UserSearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSearchReq.Marshal(b, m, deterministic)
}
func (m *UserSearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSearchReq.Merge(m, src)
}
func (m *UserSearchReq) XXX_Size() int {
	return xxx_messageInfo_UserSearchReq.Size(m)
}
func (m *UserSearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserSearchReq proto.InternalMessageInfo

func (m *UserSearchReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserSearchReq) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type UserRecord struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserType             int32    `protobuf:"varint,3,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	GrpRole              int32    `protobuf:"varint,4,opt,name=grp_role,json=grpRole,proto3" json:"grp_role,omitempty"`
	IsFriend             bool     `protobuf:"varint,5,opt,name=isFriend,proto3" json:"isFriend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRecord) Reset()         { *m = UserRecord{} }
func (m *UserRecord) String() string { return proto.CompactTextString(m) }
func (*UserRecord) ProtoMessage()    {}
func (*UserRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{32}
}

func (m *UserRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRecord.Unmarshal(m, b)
}
func (m *UserRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRecord.Marshal(b, m, deterministic)
}
func (m *UserRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRecord.Merge(m, src)
}
func (m *UserRecord) XXX_Size() int {
	return xxx_messageInfo_UserRecord.Size(m)
}
func (m *UserRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRecord.DiscardUnknown(m)
}

var xxx_messageInfo_UserRecord proto.InternalMessageInfo

func (m *UserRecord) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserRecord) GetUserType() int32 {
	if m != nil {
		return m.UserType
	}
	return 0
}

func (m *UserRecord) GetGrpRole() int32 {
	if m != nil {
		return m.GrpRole
	}
	return 0
}

func (m *UserRecord) GetIsFriend() bool {
	if m != nil {
		return m.IsFriend
	}
	return false
}

type UserSearchRsp struct {
	Res                  *Result       `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	UserList             []*UserRecord `protobuf:"bytes,2,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UserSearchRsp) Reset()         { *m = UserSearchRsp{} }
func (m *UserSearchRsp) String() string { return proto.CompactTextString(m) }
func (*UserSearchRsp) ProtoMessage()    {}
func (*UserSearchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{33}
}

func (m *UserSearchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSearchRsp.Unmarshal(m, b)
}
func (m *UserSearchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSearchRsp.Marshal(b, m, deterministic)
}
func (m *UserSearchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSearchRsp.Merge(m, src)
}
func (m *UserSearchRsp) XXX_Size() int {
	return xxx_messageInfo_UserSearchRsp.Size(m)
}
func (m *UserSearchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSearchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UserSearchRsp proto.InternalMessageInfo

func (m *UserSearchRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *UserSearchRsp) GetUserList() []*UserRecord {
	if m != nil {
		return m.UserList
	}
	return nil
}

type CreateGroupReq struct {
	//    repeated int32 deviceIds = 1;
	DeviceIds            string    `protobuf:"bytes,1,opt,name=deviceIds,proto3" json:"deviceIds,omitempty"`
	GroupName            string    `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	AccountId            int32     `protobuf:"varint,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	DeviceInfos          []*Member `protobuf:"bytes,4,rep,name=deviceInfos,proto3" json:"deviceInfos,omitempty"`
	GroupInfo            *Group    `protobuf:"bytes,5,opt,name=groupInfo,proto3" json:"groupInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateGroupReq) Reset()         { *m = CreateGroupReq{} }
func (m *CreateGroupReq) String() string { return proto.CompactTextString(m) }
func (*CreateGroupReq) ProtoMessage()    {}
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{34}
}

func (m *CreateGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupReq.Unmarshal(m, b)
}
func (m *CreateGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupReq.Marshal(b, m, deterministic)
}
func (m *CreateGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupReq.Merge(m, src)
}
func (m *CreateGroupReq) XXX_Size() int {
	return xxx_messageInfo_CreateGroupReq.Size(m)
}
func (m *CreateGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupReq proto.InternalMessageInfo

func (m *CreateGroupReq) GetDeviceIds() string {
	if m != nil {
		return m.DeviceIds
	}
	return ""
}

func (m *CreateGroupReq) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *CreateGroupReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *CreateGroupReq) GetDeviceInfos() []*Member {
	if m != nil {
		return m.DeviceInfos
	}
	return nil
}

func (m *CreateGroupReq) GetGroupInfo() *Group {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

type CreateGroupResp struct {
	GroupInfo            *GroupInfo `protobuf:"bytes,1,opt,name=GroupInfo,proto3" json:"GroupInfo,omitempty"`
	Res                  *Result    `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateGroupResp) Reset()         { *m = CreateGroupResp{} }
func (m *CreateGroupResp) String() string { return proto.CompactTextString(m) }
func (*CreateGroupResp) ProtoMessage()    {}
func (*CreateGroupResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{35}
}

func (m *CreateGroupResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupResp.Unmarshal(m, b)
}
func (m *CreateGroupResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupResp.Marshal(b, m, deterministic)
}
func (m *CreateGroupResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupResp.Merge(m, src)
}
func (m *CreateGroupResp) XXX_Size() int {
	return xxx_messageInfo_CreateGroupResp.Size(m)
}
func (m *CreateGroupResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupResp proto.InternalMessageInfo

func (m *CreateGroupResp) GetGroupInfo() *GroupInfo {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

func (m *CreateGroupResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type GrpUserAddReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  int32    `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Timestamp            int32    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpUserAddReq) Reset()         { *m = GrpUserAddReq{} }
func (m *GrpUserAddReq) String() string { return proto.CompactTextString(m) }
func (*GrpUserAddReq) ProtoMessage()    {}
func (*GrpUserAddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{36}
}

func (m *GrpUserAddReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserAddReq.Unmarshal(m, b)
}
func (m *GrpUserAddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserAddReq.Marshal(b, m, deterministic)
}
func (m *GrpUserAddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserAddReq.Merge(m, src)
}
func (m *GrpUserAddReq) XXX_Size() int {
	return xxx_messageInfo_GrpUserAddReq.Size(m)
}
func (m *GrpUserAddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserAddReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserAddReq proto.InternalMessageInfo

func (m *GrpUserAddReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GrpUserAddReq) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GrpUserAddReq) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GrpUserAddRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpUserAddRsp) Reset()         { *m = GrpUserAddRsp{} }
func (m *GrpUserAddRsp) String() string { return proto.CompactTextString(m) }
func (*GrpUserAddRsp) ProtoMessage()    {}
func (*GrpUserAddRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{37}
}

func (m *GrpUserAddRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserAddRsp.Unmarshal(m, b)
}
func (m *GrpUserAddRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserAddRsp.Marshal(b, m, deterministic)
}
func (m *GrpUserAddRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserAddRsp.Merge(m, src)
}
func (m *GrpUserAddRsp) XXX_Size() int {
	return xxx_messageInfo_GrpUserAddRsp.Size(m)
}
func (m *GrpUserAddRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserAddRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserAddRsp proto.InternalMessageInfo

func (m *GrpUserAddRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type GrpUserDelReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  int32    `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Timestamp            int32    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpUserDelReq) Reset()         { *m = GrpUserDelReq{} }
func (m *GrpUserDelReq) String() string { return proto.CompactTextString(m) }
func (*GrpUserDelReq) ProtoMessage()    {}
func (*GrpUserDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{38}
}

func (m *GrpUserDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserDelReq.Unmarshal(m, b)
}
func (m *GrpUserDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserDelReq.Marshal(b, m, deterministic)
}
func (m *GrpUserDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserDelReq.Merge(m, src)
}
func (m *GrpUserDelReq) XXX_Size() int {
	return xxx_messageInfo_GrpUserDelReq.Size(m)
}
func (m *GrpUserDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserDelReq proto.InternalMessageInfo

func (m *GrpUserDelReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GrpUserDelReq) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GrpUserDelReq) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GrpUserDelRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpUserDelRsp) Reset()         { *m = GrpUserDelRsp{} }
func (m *GrpUserDelRsp) String() string { return proto.CompactTextString(m) }
func (*GrpUserDelRsp) ProtoMessage()    {}
func (*GrpUserDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{39}
}

func (m *GrpUserDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpUserDelRsp.Unmarshal(m, b)
}
func (m *GrpUserDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpUserDelRsp.Marshal(b, m, deterministic)
}
func (m *GrpUserDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpUserDelRsp.Merge(m, src)
}
func (m *GrpUserDelRsp) XXX_Size() int {
	return xxx_messageInfo_GrpUserDelRsp.Size(m)
}
func (m *GrpUserDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpUserDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GrpUserDelRsp proto.InternalMessageInfo

func (m *GrpUserDelRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type UserExitReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  int32    `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExitReq) Reset()         { *m = UserExitReq{} }
func (m *UserExitReq) String() string { return proto.CompactTextString(m) }
func (*UserExitReq) ProtoMessage()    {}
func (*UserExitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{40}
}

func (m *UserExitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExitReq.Unmarshal(m, b)
}
func (m *UserExitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExitReq.Marshal(b, m, deterministic)
}
func (m *UserExitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExitReq.Merge(m, src)
}
func (m *UserExitReq) XXX_Size() int {
	return xxx_messageInfo_UserExitReq.Size(m)
}
func (m *UserExitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExitReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserExitReq proto.InternalMessageInfo

func (m *UserExitReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserExitReq) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type UserExitRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExitRsp) Reset()         { *m = UserExitRsp{} }
func (m *UserExitRsp) String() string { return proto.CompactTextString(m) }
func (*UserExitRsp) ProtoMessage()    {}
func (*UserExitRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{41}
}

func (m *UserExitRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExitRsp.Unmarshal(m, b)
}
func (m *UserExitRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExitRsp.Marshal(b, m, deterministic)
}
func (m *UserExitRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExitRsp.Merge(m, src)
}
func (m *UserExitRsp) XXX_Size() int {
	return xxx_messageInfo_UserExitRsp.Size(m)
}
func (m *UserExitRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExitRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UserExitRsp proto.InternalMessageInfo

func (m *UserExitRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type GroupDelReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RoleType             int32    `protobuf:"varint,2,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"`
	Gid                  int32    `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupDelReq) Reset()         { *m = GroupDelReq{} }
func (m *GroupDelReq) String() string { return proto.CompactTextString(m) }
func (*GroupDelReq) ProtoMessage()    {}
func (*GroupDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{42}
}

func (m *GroupDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDelReq.Unmarshal(m, b)
}
func (m *GroupDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDelReq.Marshal(b, m, deterministic)
}
func (m *GroupDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDelReq.Merge(m, src)
}
func (m *GroupDelReq) XXX_Size() int {
	return xxx_messageInfo_GroupDelReq.Size(m)
}
func (m *GroupDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDelReq proto.InternalMessageInfo

func (m *GroupDelReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GroupDelReq) GetRoleType() int32 {
	if m != nil {
		return m.RoleType
	}
	return 0
}

func (m *GroupDelReq) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GroupDelRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupDelRsp) Reset()         { *m = GroupDelRsp{} }
func (m *GroupDelRsp) String() string { return proto.CompactTextString(m) }
func (*GroupDelRsp) ProtoMessage()    {}
func (*GroupDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{43}
}

func (m *GroupDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDelRsp.Unmarshal(m, b)
}
func (m *GroupDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDelRsp.Marshal(b, m, deterministic)
}
func (m *GroupDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDelRsp.Merge(m, src)
}
func (m *GroupDelRsp) XXX_Size() int {
	return xxx_messageInfo_GroupDelRsp.Size(m)
}
func (m *GroupDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDelRsp proto.InternalMessageInfo

func (m *GroupDelRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type GrpListReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpListReq) Reset()         { *m = GrpListReq{} }
func (m *GrpListReq) String() string { return proto.CompactTextString(m) }
func (*GrpListReq) ProtoMessage()    {}
func (*GrpListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{44}
}

func (m *GrpListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpListReq.Unmarshal(m, b)
}
func (m *GrpListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpListReq.Marshal(b, m, deterministic)
}
func (m *GrpListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpListReq.Merge(m, src)
}
func (m *GrpListReq) XXX_Size() int {
	return xxx_messageInfo_GrpListReq.Size(m)
}
func (m *GrpListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpListReq proto.InternalMessageInfo

func (m *GrpListReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GroupInfo struct {
	Gid                  int32    `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	IsExist              bool     `protobuf:"varint,3,opt,name=isExist,proto3" json:"isExist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{45}
}

func (m *GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInfo.Unmarshal(m, b)
}
func (m *GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInfo.Merge(m, src)
}
func (m *GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupInfo.Size(m)
}
func (m *GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInfo proto.InternalMessageInfo

func (m *GroupInfo) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GroupInfo) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GroupInfo) GetIsExist() bool {
	if m != nil {
		return m.IsExist
	}
	return false
}

// 返回模糊查找以及目前用户所在的群组
type GroupListRsp struct {
	Uid                  int32        `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupList            []*GroupInfo `protobuf:"bytes,2,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	Res                  *Result      `protobuf:"bytes,3,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupListRsp) Reset()         { *m = GroupListRsp{} }
func (m *GroupListRsp) String() string { return proto.CompactTextString(m) }
func (*GroupListRsp) ProtoMessage()    {}
func (*GroupListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{46}
}

func (m *GroupListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupListRsp.Unmarshal(m, b)
}
func (m *GroupListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupListRsp.Marshal(b, m, deterministic)
}
func (m *GroupListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListRsp.Merge(m, src)
}
func (m *GroupListRsp) XXX_Size() int {
	return xxx_messageInfo_GroupListRsp.Size(m)
}
func (m *GroupListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListRsp proto.InternalMessageInfo

func (m *GroupListRsp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GroupListRsp) GetGroupList() []*GroupInfo {
	if m != nil {
		return m.GroupList
	}
	return nil
}

func (m *GroupListRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type GrpSearchReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpSearchReq) Reset()         { *m = GrpSearchReq{} }
func (m *GrpSearchReq) String() string { return proto.CompactTextString(m) }
func (*GrpSearchReq) ProtoMessage()    {}
func (*GrpSearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{47}
}

func (m *GrpSearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpSearchReq.Unmarshal(m, b)
}
func (m *GrpSearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpSearchReq.Marshal(b, m, deterministic)
}
func (m *GrpSearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpSearchReq.Merge(m, src)
}
func (m *GrpSearchReq) XXX_Size() int {
	return xxx_messageInfo_GrpSearchReq.Size(m)
}
func (m *GrpSearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpSearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrpSearchReq proto.InternalMessageInfo

func (m *GrpSearchReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GrpSearchReq) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type GrpMemberList struct {
	Gid                  int32         `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	GroupName            string        `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	UsrList              []*UserRecord `protobuf:"bytes,3,rep,name=usr_list,json=usrList,proto3" json:"usr_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GrpMemberList) Reset()         { *m = GrpMemberList{} }
func (m *GrpMemberList) String() string { return proto.CompactTextString(m) }
func (*GrpMemberList) ProtoMessage()    {}
func (*GrpMemberList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{48}
}

func (m *GrpMemberList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpMemberList.Unmarshal(m, b)
}
func (m *GrpMemberList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpMemberList.Marshal(b, m, deterministic)
}
func (m *GrpMemberList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpMemberList.Merge(m, src)
}
func (m *GrpMemberList) XXX_Size() int {
	return xxx_messageInfo_GrpMemberList.Size(m)
}
func (m *GrpMemberList) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpMemberList.DiscardUnknown(m)
}

var xxx_messageInfo_GrpMemberList proto.InternalMessageInfo

func (m *GrpMemberList) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GrpMemberList) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GrpMemberList) GetUsrList() []*UserRecord {
	if m != nil {
		return m.UsrList
	}
	return nil
}

type MsgNewReq struct {
	Uids                 []int32  `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
	SenderId             int32    `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	MsgType              MsgType  `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3,enum=talk_cloud.MsgType" json:"msg_type,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime           int32    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgNewReq) Reset()         { *m = MsgNewReq{} }
func (m *MsgNewReq) String() string { return proto.CompactTextString(m) }
func (*MsgNewReq) ProtoMessage()    {}
func (*MsgNewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{49}
}

func (m *MsgNewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgNewReq.Unmarshal(m, b)
}
func (m *MsgNewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgNewReq.Marshal(b, m, deterministic)
}
func (m *MsgNewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewReq.Merge(m, src)
}
func (m *MsgNewReq) XXX_Size() int {
	return xxx_messageInfo_MsgNewReq.Size(m)
}
func (m *MsgNewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewReq proto.InternalMessageInfo

func (m *MsgNewReq) GetUids() []int32 {
	if m != nil {
		return m.Uids
	}
	return nil
}

func (m *MsgNewReq) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *MsgNewReq) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_PLAIN_TEXT
}

func (m *MsgNewReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgNewReq) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type MsgNewRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgNewRsp) Reset()         { *m = MsgNewRsp{} }
func (m *MsgNewRsp) String() string { return proto.CompactTextString(m) }
func (*MsgNewRsp) ProtoMessage()    {}
func (*MsgNewRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{50}
}

func (m *MsgNewRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgNewRsp.Unmarshal(m, b)
}
func (m *MsgNewRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgNewRsp.Marshal(b, m, deterministic)
}
func (m *MsgNewRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewRsp.Merge(m, src)
}
func (m *MsgNewRsp) XXX_Size() int {
	return xxx_messageInfo_MsgNewRsp.Size(m)
}
func (m *MsgNewRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewRsp proto.InternalMessageInfo

func (m *MsgNewRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type MsgReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Stat                 MsgStat  `protobuf:"varint,2,opt,name=stat,proto3,enum=talk_cloud.MsgStat" json:"stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgReq) Reset()         { *m = MsgReq{} }
func (m *MsgReq) String() string { return proto.CompactTextString(m) }
func (*MsgReq) ProtoMessage()    {}
func (*MsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{51}
}

func (m *MsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgReq.Unmarshal(m, b)
}
func (m *MsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgReq.Marshal(b, m, deterministic)
}
func (m *MsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReq.Merge(m, src)
}
func (m *MsgReq) XXX_Size() int {
	return xxx_messageInfo_MsgReq.Size(m)
}
func (m *MsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReq proto.InternalMessageInfo

func (m *MsgReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MsgReq) GetStat() MsgStat {
	if m != nil {
		return m.Stat
	}
	return MsgStat_MSG_UNREAD
}

type MsgData struct {
	MsgId                int32    `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	SenderId             int32    `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	MsgType              MsgType  `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3,enum=talk_cloud.MsgType" json:"msg_type,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime           int32    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgData) Reset()         { *m = MsgData{} }
func (m *MsgData) String() string { return proto.CompactTextString(m) }
func (*MsgData) ProtoMessage()    {}
func (*MsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{52}
}

func (m *MsgData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgData.Unmarshal(m, b)
}
func (m *MsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgData.Marshal(b, m, deterministic)
}
func (m *MsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgData.Merge(m, src)
}
func (m *MsgData) XXX_Size() int {
	return xxx_messageInfo_MsgData.Size(m)
}
func (m *MsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgData proto.InternalMessageInfo

func (m *MsgData) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *MsgData) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *MsgData) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_PLAIN_TEXT
}

func (m *MsgData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgData) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type MsgRsp struct {
	Uid                  int32      `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Stat                 MsgStat    `protobuf:"varint,2,opt,name=stat,proto3,enum=talk_cloud.MsgStat" json:"stat,omitempty"`
	MsgList              []*MsgData `protobuf:"bytes,3,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MsgRsp) Reset()         { *m = MsgRsp{} }
func (m *MsgRsp) String() string { return proto.CompactTextString(m) }
func (*MsgRsp) ProtoMessage()    {}
func (*MsgRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{53}
}

func (m *MsgRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRsp.Unmarshal(m, b)
}
func (m *MsgRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRsp.Marshal(b, m, deterministic)
}
func (m *MsgRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRsp.Merge(m, src)
}
func (m *MsgRsp) XXX_Size() int {
	return xxx_messageInfo_MsgRsp.Size(m)
}
func (m *MsgRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRsp proto.InternalMessageInfo

func (m *MsgRsp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MsgRsp) GetStat() MsgStat {
	if m != nil {
		return m.Stat
	}
	return MsgStat_MSG_UNREAD
}

func (m *MsgRsp) GetMsgList() []*MsgData {
	if m != nil {
		return m.MsgList
	}
	return nil
}

type MsgStatReq struct {
	MsgIds               []int32  `protobuf:"varint,1,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	Stat                 MsgStat  `protobuf:"varint,2,opt,name=stat,proto3,enum=talk_cloud.MsgStat" json:"stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgStatReq) Reset()         { *m = MsgStatReq{} }
func (m *MsgStatReq) String() string { return proto.CompactTextString(m) }
func (*MsgStatReq) ProtoMessage()    {}
func (*MsgStatReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{54}
}

func (m *MsgStatReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgStatReq.Unmarshal(m, b)
}
func (m *MsgStatReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgStatReq.Marshal(b, m, deterministic)
}
func (m *MsgStatReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStatReq.Merge(m, src)
}
func (m *MsgStatReq) XXX_Size() int {
	return xxx_messageInfo_MsgStatReq.Size(m)
}
func (m *MsgStatReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStatReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStatReq proto.InternalMessageInfo

func (m *MsgStatReq) GetMsgIds() []int32 {
	if m != nil {
		return m.MsgIds
	}
	return nil
}

func (m *MsgStatReq) GetStat() MsgStat {
	if m != nil {
		return m.Stat
	}
	return MsgStat_MSG_UNREAD
}

type MsgStatRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgStatRsp) Reset()         { *m = MsgStatRsp{} }
func (m *MsgStatRsp) String() string { return proto.CompactTextString(m) }
func (*MsgStatRsp) ProtoMessage()    {}
func (*MsgStatRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{55}
}

func (m *MsgStatRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgStatRsp.Unmarshal(m, b)
}
func (m *MsgStatRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgStatRsp.Marshal(b, m, deterministic)
}
func (m *MsgStatRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStatRsp.Merge(m, src)
}
func (m *MsgStatRsp) XXX_Size() int {
	return xxx_messageInfo_MsgStatRsp.Size(m)
}
func (m *MsgStatRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStatRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStatRsp proto.InternalMessageInfo

func (m *MsgStatRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type MsgDelReq struct {
	MsgIds               []int32  `protobuf:"varint,1,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDelReq) Reset()         { *m = MsgDelReq{} }
func (m *MsgDelReq) String() string { return proto.CompactTextString(m) }
func (*MsgDelReq) ProtoMessage()    {}
func (*MsgDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{56}
}

func (m *MsgDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDelReq.Unmarshal(m, b)
}
func (m *MsgDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDelReq.Marshal(b, m, deterministic)
}
func (m *MsgDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelReq.Merge(m, src)
}
func (m *MsgDelReq) XXX_Size() int {
	return xxx_messageInfo_MsgDelReq.Size(m)
}
func (m *MsgDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelReq proto.InternalMessageInfo

func (m *MsgDelReq) GetMsgIds() []int32 {
	if m != nil {
		return m.MsgIds
	}
	return nil
}

type MsgDelRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDelRsp) Reset()         { *m = MsgDelRsp{} }
func (m *MsgDelRsp) String() string { return proto.CompactTextString(m) }
func (*MsgDelRsp) ProtoMessage()    {}
func (*MsgDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5696941eb593683, []int{57}
}

func (m *MsgDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDelRsp.Unmarshal(m, b)
}
func (m *MsgDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDelRsp.Marshal(b, m, deterministic)
}
func (m *MsgDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelRsp.Merge(m, src)
}
func (m *MsgDelRsp) XXX_Size() int {
	return xxx_messageInfo_MsgDelRsp.Size(m)
}
func (m *MsgDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelRsp proto.InternalMessageInfo

func (m *MsgDelRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

func init() {
	proto.RegisterEnum("talk_cloud.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("talk_cloud.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("talk_cloud.MsgStat", MsgStat_name, MsgStat_value)
	proto.RegisterType((*Head)(nil), "talk_cloud.Head")
	proto.RegisterType((*AppRegReq)(nil), "talk_cloud.AppRegReq")
	proto.RegisterType((*AppRegRsp)(nil), "talk_cloud.AppRegRsp")
	proto.RegisterType((*DeviceRegReq)(nil), "talk_cloud.DeviceRegReq")
	proto.RegisterType((*DeviceRegRsp)(nil), "talk_cloud.DeviceRegRsp")
	proto.RegisterType((*LoginReq)(nil), "talk_cloud.LoginReq")
	proto.RegisterType((*LoginRsp)(nil), "talk_cloud.LoginRsp")
	proto.RegisterType((*LoginReqData)(nil), "talk_cloud.LoginReqData")
	proto.RegisterType((*LoginRespData)(nil), "talk_cloud.loginRespData")
	proto.RegisterType((*ImMsgReqData)(nil), "talk_cloud.ImMsgReqData")
	proto.RegisterType((*ImMsgRespData)(nil), "talk_cloud.ImMsgRespData")
	proto.RegisterType((*LogoutReq)(nil), "talk_cloud.LogoutReq")
	proto.RegisterType((*LogoutRsp)(nil), "talk_cloud.LogoutRsp")
	proto.RegisterType((*SetLockGroupIdReq)(nil), "talk_cloud.SetLockGroupIdReq")
	proto.RegisterType((*SetLockGroupIdResp)(nil), "talk_cloud.SetLockGroupIdResp")
	proto.RegisterType((*KeepAliveReq)(nil), "talk_cloud.keepAliveReq")
	proto.RegisterType((*KeepAliveResp)(nil), "talk_cloud.keepAliveResp")
	proto.RegisterType((*StreamRequest)(nil), "talk_cloud.StreamRequest")
	proto.RegisterType((*UploadFileData)(nil), "talk_cloud.UploadFileData")
	proto.RegisterType((*ImReceiver)(nil), "talk_cloud.ImReceiver")
	proto.RegisterType((*StreamResponse)(nil), "talk_cloud.StreamResponse")
	proto.RegisterType((*FirstLoginData)(nil), "talk_cloud.FirstLoginData")
	proto.RegisterType((*KeepAlive)(nil), "talk_cloud.KeepAlive")
	proto.RegisterType((*ImMsgData)(nil), "talk_cloud.ImMsgData")
	proto.RegisterType((*FriendNewReq)(nil), "talk_cloud.FriendNewReq")
	proto.RegisterType((*FriendNewRsp)(nil), "talk_cloud.FriendNewRsp")
	proto.RegisterType((*FriendDelReq)(nil), "talk_cloud.FriendDelReq")
	proto.RegisterType((*FriendDelRsp)(nil), "talk_cloud.FriendDelRsp")
	proto.RegisterType((*FriendsReq)(nil), "talk_cloud.FriendsReq")
	proto.RegisterType((*FriendRecord)(nil), "talk_cloud.FriendRecord")
	proto.RegisterType((*FriendsRsp)(nil), "talk_cloud.FriendsRsp")
	proto.RegisterType((*UserSearchReq)(nil), "talk_cloud.UserSearchReq")
	proto.RegisterType((*UserRecord)(nil), "talk_cloud.UserRecord")
	proto.RegisterType((*UserSearchRsp)(nil), "talk_cloud.UserSearchRsp")
	proto.RegisterType((*CreateGroupReq)(nil), "talk_cloud.CreateGroupReq")
	proto.RegisterType((*CreateGroupResp)(nil), "talk_cloud.CreateGroupResp")
	proto.RegisterType((*GrpUserAddReq)(nil), "talk_cloud.GrpUserAddReq")
	proto.RegisterType((*GrpUserAddRsp)(nil), "talk_cloud.GrpUserAddRsp")
	proto.RegisterType((*GrpUserDelReq)(nil), "talk_cloud.GrpUserDelReq")
	proto.RegisterType((*GrpUserDelRsp)(nil), "talk_cloud.GrpUserDelRsp")
	proto.RegisterType((*UserExitReq)(nil), "talk_cloud.UserExitReq")
	proto.RegisterType((*UserExitRsp)(nil), "talk_cloud.UserExitRsp")
	proto.RegisterType((*GroupDelReq)(nil), "talk_cloud.GroupDelReq")
	proto.RegisterType((*GroupDelRsp)(nil), "talk_cloud.GroupDelRsp")
	proto.RegisterType((*GrpListReq)(nil), "talk_cloud.GrpListReq")
	proto.RegisterType((*GroupInfo)(nil), "talk_cloud.GroupInfo")
	proto.RegisterType((*GroupListRsp)(nil), "talk_cloud.GroupListRsp")
	proto.RegisterType((*GrpSearchReq)(nil), "talk_cloud.GrpSearchReq")
	proto.RegisterType((*GrpMemberList)(nil), "talk_cloud.GrpMemberList")
	proto.RegisterType((*MsgNewReq)(nil), "talk_cloud.MsgNewReq")
	proto.RegisterType((*MsgNewRsp)(nil), "talk_cloud.MsgNewRsp")
	proto.RegisterType((*MsgReq)(nil), "talk_cloud.MsgReq")
	proto.RegisterType((*MsgData)(nil), "talk_cloud.MsgData")
	proto.RegisterType((*MsgRsp)(nil), "talk_cloud.MsgRsp")
	proto.RegisterType((*MsgStatReq)(nil), "talk_cloud.MsgStatReq")
	proto.RegisterType((*MsgStatRsp)(nil), "talk_cloud.MsgStatRsp")
	proto.RegisterType((*MsgDelReq)(nil), "talk_cloud.MsgDelReq")
	proto.RegisterType((*MsgDelRsp)(nil), "talk_cloud.MsgDelRsp")
}

func init() { proto.RegisterFile("talk_cloud_app.proto", fileDescriptor_b5696941eb593683) }

var fileDescriptor_b5696941eb593683 = []byte{
	// 2051 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xdf, 0x8f, 0xdb, 0xc6,
	0xf1, 0x3f, 0x9e, 0x74, 0x3a, 0x71, 0xa4, 0x93, 0x95, 0xfd, 0x26, 0x97, 0x33, 0x1d, 0x3b, 0x01,
	0x61, 0x20, 0x86, 0x81, 0xaf, 0x53, 0xcb, 0x4e, 0xeb, 0xb4, 0x4d, 0x0b, 0xe5, 0xa4, 0x93, 0x19,
	0x9f, 0x74, 0x0e, 0x75, 0x67, 0x34, 0x40, 0x0a, 0x95, 0x27, 0xae, 0x65, 0xd6, 0x92, 0x48, 0x73,
	0xa9, 0x4b, 0x0c, 0x14, 0xe8, 0x53, 0xfb, 0xd2, 0x7f, 0xa2, 0x6f, 0xed, 0x6b, 0x1f, 0xfb, 0x67,
	0xe4, 0xa5, 0x40, 0xff, 0x9b, 0x62, 0x67, 0xb9, 0xe4, 0xae, 0x8e, 0xd2, 0xc9, 0x31, 0x0a, 0x04,
	0x7d, 0xe3, 0xce, 0xce, 0xaf, 0xfd, 0xec, 0xcc, 0xec, 0xec, 0x12, 0xde, 0x4d, 0xbc, 0xe9, 0xcb,
	0xd1, 0x78, 0x1a, 0x2e, 0xfc, 0x91, 0x17, 0x45, 0xf7, 0xa2, 0x38, 0x4c, 0x42, 0x02, 0x39, 0xd5,
	0xda, 0x57, 0x38, 0x66, 0xa1, 0x4f, 0xa7, 0x82, 0xc7, 0x1e, 0x41, 0xf9, 0x31, 0xf5, 0x7c, 0x72,
	0x00, 0xbb, 0x17, 0x34, 0x66, 0x41, 0x38, 0x3f, 0x30, 0x3e, 0x32, 0xee, 0x98, 0xae, 0x1c, 0x92,
	0x0f, 0xa1, 0xc6, 0x16, 0xe7, 0x23, 0x39, 0xbb, 0x8d, 0xb3, 0xc0, 0x16, 0xe7, 0xcf, 0x52, 0x86,
	0x0f, 0xc0, 0x4c, 0x82, 0x19, 0x65, 0x89, 0x37, 0x8b, 0x0e, 0x4a, 0x1f, 0x19, 0x77, 0x76, 0xdc,
	0x9c, 0x60, 0x7b, 0x60, 0xb6, 0xa3, 0xc8, 0xa5, 0x13, 0x97, 0xbe, 0x22, 0xb7, 0xa1, 0xfc, 0x82,
	0x7a, 0x3e, 0x9a, 0xa8, 0xb5, 0x9a, 0xf7, 0x72, 0xa7, 0xee, 0x71, 0x2f, 0x5c, 0x9c, 0x25, 0x04,
	0xca, 0x73, 0x6f, 0x46, 0x53, 0x53, 0xf8, 0x4d, 0x2c, 0xa8, 0x46, 0x1e, 0x63, 0xdf, 0x86, 0xb1,
	0x8f, 0x36, 0x4c, 0x37, 0x1b, 0xdb, 0xbf, 0xcd, 0x4c, 0xb0, 0x88, 0x34, 0x60, 0x3b, 0x10, 0x06,
	0x76, 0xdc, 0xed, 0xc0, 0xe7, 0x82, 0x0b, 0x46, 0xe3, 0x41, 0xae, 0x30, 0x1b, 0x93, 0xdb, 0x50,
	0x8a, 0x29, 0x43, 0x7d, 0xb5, 0x16, 0x51, 0xbd, 0x71, 0x29, 0x5b, 0x4c, 0x13, 0x97, 0x4f, 0xdb,
	0x03, 0xa8, 0x77, 0xe8, 0x45, 0x30, 0xa6, 0xe9, 0x22, 0x6e, 0x02, 0x78, 0xe3, 0x71, 0xb8, 0x98,
	0x27, 0xa3, 0xcc, 0x92, 0x99, 0x52, 0x1c, 0x9f, 0xe3, 0xe5, 0x23, 0xfb, 0x68, 0x1a, 0xb0, 0x44,
	0xe2, 0x25, 0x48, 0xc7, 0x01, 0x4b, 0xec, 0x87, 0xaa, 0x3e, 0x16, 0x49, 0x2f, 0x8c, 0xf5, 0x5e,
	0x7c, 0x03, 0xd5, 0xe3, 0x70, 0x12, 0xcc, 0xdf, 0x0e, 0xc6, 0x7d, 0xa8, 0x20, 0x6c, 0x12, 0xc4,
	0x74, 0x64, 0x7f, 0x6f, 0x48, 0xf5, 0x2c, 0x22, 0xf7, 0x04, 0x64, 0xce, 0xfc, 0x79, 0x58, 0xe4,
	0x55, 0x9f, 0xce, 0xce, 0x69, 0xec, 0x66, 0x3c, 0xe4, 0x33, 0xa8, 0x3d, 0x8f, 0x03, 0x3a, 0xf7,
	0xe5, 0x8a, 0x4b, 0x77, 0x6a, 0xad, 0x03, 0x55, 0xe4, 0x08, 0xa7, 0x5d, 0x3a, 0x0e, 0x63, 0xdf,
	0x05, 0xc1, 0xcc, 0xb1, 0x20, 0x0f, 0x01, 0x26, 0x71, 0xb8, 0x88, 0x84, 0x64, 0x09, 0x25, 0xdf,
	0x53, 0x25, 0x7b, 0x7c, 0x96, 0x5b, 0x71, 0x4d, 0x64, 0x44, 0xa9, 0x14, 0xb1, 0xf2, 0x7a, 0xc4,
	0x7e, 0x07, 0x75, 0x89, 0x58, 0xc7, 0x4b, 0xbc, 0xff, 0x02, 0x6a, 0xff, 0x32, 0x60, 0x6f, 0x2a,
	0x4c, 0xb0, 0x08, 0x6d, 0xfc, 0x8f, 0x40, 0xf7, 0x57, 0x03, 0xea, 0xce, 0xac, 0xcf, 0x26, 0x12,
	0xbb, 0xe5, 0xac, 0xb2, 0xa1, 0xee, 0xd2, 0x31, 0x0d, 0x2e, 0x68, 0x7c, 0xfa, 0x3a, 0x12, 0x68,
	0xed, 0xb8, 0x1a, 0x8d, 0xdc, 0x02, 0x90, 0x63, 0xc7, 0x4f, 0x0b, 0x83, 0x42, 0x11, 0x3a, 0x58,
	0xb8, 0x88, 0xc7, 0xf4, 0xa9, 0x97, 0xbc, 0x40, 0x9f, 0x4c, 0x57, 0xa3, 0xf1, 0xb2, 0xd4, 0x67,
	0x13, 0x34, 0xb1, 0x83, 0x0a, 0xe4, 0xd0, 0xfe, 0x05, 0xec, 0xa5, 0x1e, 0xa6, 0xd0, 0xdf, 0x85,
	0x4a, 0x8c, 0x4b, 0x58, 0x93, 0x49, 0x29, 0x87, 0xdd, 0x05, 0xf3, 0x38, 0x9c, 0x84, 0x8b, 0xe4,
	0xad, 0xb2, 0xc9, 0xbe, 0x9f, 0xa9, 0xd9, 0x38, 0x8d, 0x7f, 0x06, 0xef, 0x0c, 0x69, 0x72, 0x1c,
	0x8e, 0x5f, 0x8a, 0xed, 0xf1, 0xb9, 0x07, 0x4d, 0x28, 0x2d, 0x1c, 0x09, 0x2f, 0xff, 0xe4, 0x94,
	0x89, 0xe3, 0xa7, 0xb0, 0xf2, 0x4f, 0xfb, 0xe7, 0x40, 0x96, 0x05, 0x85, 0x51, 0x77, 0xbd, 0x51,
	0x97, 0x32, 0xbb, 0x05, 0xf5, 0x97, 0x94, 0x46, 0xed, 0x69, 0x70, 0x41, 0xa5, 0xbd, 0x20, 0xb7,
	0x17, 0xa0, 0xbd, 0xf6, 0xe1, 0x13, 0x69, 0xaf, 0x7d, 0xf8, 0xc4, 0x7e, 0x00, 0x7b, 0x8a, 0x0c,
	0x8b, 0x8a, 0x85, 0x86, 0x5f, 0x0f, 0xa4, 0xd0, 0xf0, 0xeb, 0x81, 0xfd, 0x4f, 0x03, 0xf6, 0x86,
	0x49, 0x4c, 0xbd, 0x99, 0x4b, 0x5f, 0x2d, 0x28, 0x4b, 0x0a, 0xa4, 0x2c, 0xa8, 0xfa, 0x5e, 0xe2,
	0x29, 0x61, 0x93, 0x8d, 0x33, 0x90, 0xcb, 0x85, 0xc9, 0xb7, 0xa3, 0x26, 0x9f, 0x74, 0xb9, 0x94,
	0xb9, 0x4c, 0x7e, 0x09, 0xb5, 0xa3, 0x60, 0x4a, 0x79, 0x34, 0xb8, 0xf4, 0xd5, 0x41, 0x05, 0x41,
	0xb1, 0x54, 0x50, 0xce, 0xa2, 0x69, 0xe8, 0xf9, 0x19, 0x93, 0xca, 0x6e, 0x7f, 0x03, 0x0d, 0x7d,
	0xba, 0xe8, 0x28, 0x61, 0x74, 0xee, 0xab, 0x9e, 0xcb, 0xf1, 0x55, 0xc1, 0x6e, 0xff, 0xc9, 0x00,
	0x70, 0x66, 0x92, 0xc0, 0x17, 0x9a, 0x70, 0x35, 0x42, 0x39, 0x7e, 0x93, 0x07, 0x20, 0xf2, 0x14,
	0x8b, 0xc7, 0x36, 0x3a, 0xbf, 0x36, 0x9f, 0xb1, 0x80, 0xa8, 0x05, 0xa7, 0x74, 0x75, 0xc1, 0xb1,
	0xff, 0xb2, 0x0d, 0x0d, 0xb9, 0x43, 0x2c, 0x0a, 0xe7, 0x8c, 0x16, 0x6f, 0x51, 0x67, 0x69, 0x8b,
	0xe4, 0x98, 0x3c, 0x02, 0x33, 0x2b, 0x79, 0xa9, 0x45, 0x0d, 0xe2, 0xa3, 0x20, 0x66, 0x09, 0xd6,
	0x5d, 0x04, 0x36, 0x67, 0x26, 0x3f, 0x05, 0x33, 0xe0, 0x19, 0xcb, 0xe9, 0x69, 0x01, 0xd2, 0x2a,
	0x9d, 0x5a, 0x70, 0xdc, 0x9c, 0x95, 0xe3, 0x92, 0x45, 0x22, 0xc6, 0xc0, 0x12, 0x2e, 0x4f, 0xb2,
	0x30, 0xcd, 0xf9, 0x64, 0x36, 0x56, 0xd6, 0x67, 0xe3, 0x3f, 0x0c, 0x68, 0xe8, 0x0e, 0xff, 0xe8,
	0x2b, 0xb8, 0xfd, 0x09, 0x98, 0xd9, 0x8a, 0x37, 0x4a, 0x4a, 0x0a, 0xa6, 0x93, 0x81, 0x79, 0x59,
	0x80, 0x40, 0x39, 0xe2, 0xe5, 0x37, 0x2d, 0x6c, 0xfc, 0x9b, 0xb4, 0xa0, 0x1a, 0xa7, 0xa1, 0x9a,
	0xee, 0xf1, 0xbe, 0xbe, 0x53, 0x32, 0x90, 0xdd, 0x8c, 0x8f, 0xb7, 0x35, 0x62, 0xa5, 0x03, 0xfa,
	0x6d, 0x71, 0x91, 0x21, 0x50, 0x7e, 0xce, 0x49, 0xc2, 0x37, 0xfc, 0xd6, 0xa5, 0x36, 0xae, 0xa2,
	0xae, 0x94, 0xea, 0xd0, 0xe9, 0xc6, 0xb6, 0xae, 0x68, 0x54, 0x1f, 0xaa, 0x3a, 0x85, 0x27, 0x34,
	0x8e, 0xd7, 0x79, 0x42, 0xe3, 0xd8, 0xbe, 0x05, 0x20, 0xa4, 0x58, 0xa1, 0x1f, 0xf6, 0x63, 0xa9,
	0x55, 0xec, 0x7f, 0xb1, 0xa7, 0x97, 0x1a, 0x0e, 0x02, 0xe5, 0x60, 0x46, 0x03, 0x74, 0xb2, 0xe4,
	0xe2, 0xb7, 0xfd, 0xc7, 0xdc, 0x52, 0x61, 0x35, 0x7e, 0x8b, 0x40, 0xdc, 0xac, 0x0f, 0xfe, 0x0c,
	0xf6, 0xce, 0x18, 0x8d, 0x87, 0xd4, 0x8b, 0xc7, 0x2f, 0x8a, 0x51, 0xdf, 0x87, 0x4a, 0xe2, 0xc5,
	0x13, 0x2a, 0xdb, 0xde, 0x74, 0x64, 0xff, 0xd9, 0x00, 0xe0, 0xb2, 0x6f, 0x04, 0xc2, 0x0d, 0x30,
	0x79, 0x96, 0x8d, 0xb0, 0x50, 0x8a, 0xed, 0xc2, 0xb4, 0xc3, 0x32, 0x74, 0x1d, 0xaa, 0x93, 0x38,
	0x1a, 0xc5, 0xe1, 0x54, 0x9c, 0x16, 0x3b, 0xee, 0xee, 0x24, 0x8e, 0xdc, 0x70, 0x8a, 0x57, 0x85,
	0x80, 0x89, 0xb5, 0x62, 0xb9, 0xa8, 0xba, 0xd9, 0xd8, 0xfe, 0xbd, 0xb6, 0x86, 0x4d, 0xe3, 0x8d,
	0x97, 0x20, 0x74, 0x45, 0x41, 0x56, 0x4b, 0x88, 0x7c, 0x6d, 0xc2, 0x45, 0x4c, 0xd4, 0xef, 0x0d,
	0x68, 0x1c, 0xc6, 0xd4, 0x4b, 0x28, 0xe6, 0x31, 0x47, 0xec, 0x03, 0x30, 0xc5, 0x45, 0xc0, 0xf1,
	0x59, 0x7a, 0xcf, 0xca, 0x09, 0x7c, 0x16, 0xd3, 0x5c, 0xb9, 0xab, 0xe4, 0x04, 0x3e, 0x9b, 0x5d,
	0x32, 0x64, 0xf4, 0xe6, 0xb7, 0x8e, 0x87, 0xf2, 0xd6, 0xc1, 0xcb, 0x05, 0xef, 0xef, 0x4a, 0x2b,
	0x2a, 0x97, 0xca, 0x46, 0x3e, 0x51, 0x8f, 0x1c, 0x51, 0x5a, 0xdf, 0xb9, 0x54, 0x80, 0x94, 0xe3,
	0xc6, 0x9e, 0xc2, 0x35, 0x6d, 0x49, 0x2c, 0xe2, 0xd8, 0x64, 0x75, 0x2a, 0xc5, 0x71, 0x55, 0x11,
	0xcb, 0x3e, 0x25, 0xec, 0xdb, 0xeb, 0x23, 0xee, 0x2b, 0xd8, 0xeb, 0xc5, 0x11, 0x07, 0xb7, 0xed,
	0xfb, 0x2b, 0x1b, 0x97, 0x49, 0x90, 0x37, 0x4a, 0x57, 0x66, 0xf9, 0xa7, 0x9a, 0xca, 0x8d, 0x0b,
	0x4e, 0xee, 0xc9, 0xca, 0x8a, 0xf3, 0xc3, 0x3d, 0xc9, 0x0b, 0xce, 0x06, 0x9e, 0xdc, 0x87, 0x1a,
	0x97, 0xe9, 0x7e, 0x17, 0x24, 0x1b, 0xfa, 0x61, 0x3f, 0x50, 0x44, 0x36, 0xb6, 0x33, 0x80, 0x1a,
	0x6e, 0xd7, 0xca, 0xf5, 0xde, 0x00, 0x93, 0x67, 0x9f, 0x48, 0xcf, 0xb4, 0x4b, 0xe0, 0x04, 0x4c,
	0xcf, 0xd4, 0x89, 0x92, 0xe6, 0x44, 0xa6, 0x6f, 0x63, 0x27, 0x6e, 0x01, 0xf4, 0x62, 0x3c, 0xf6,
	0x8a, 0xab, 0xeb, 0x33, 0x25, 0xf6, 0xa4, 0x4d, 0x23, 0xdf, 0x80, 0x9b, 0xf2, 0x80, 0x9d, 0x17,
	0x66, 0xd4, 0x01, 0xec, 0x06, 0xac, 0xfb, 0x9d, 0x38, 0x7c, 0x79, 0x9d, 0x90, 0x43, 0xfb, 0x0f,
	0x50, 0xef, 0xc9, 0x03, 0xb7, 0xb8, 0xda, 0xea, 0x67, 0xf7, 0xf6, 0x9b, 0xdd, 0xbe, 0xae, 0x28,
	0xb4, 0x8f, 0xb8, 0xf5, 0xe8, 0x87, 0xd4, 0x59, 0x86, 0x31, 0x25, 0x32, 0x1d, 0x0d, 0xbe, 0x31,
	0x26, 0xf7, 0x79, 0xfb, 0x13, 0xab, 0x1d, 0xc9, 0xaa, 0x42, 0xb7, 0xbb, 0x60, 0xa2, 0xce, 0xfd,
	0xcd, 0x00, 0xb3, 0xcf, 0x26, 0xe9, 0xb1, 0x4f, 0xa0, 0xbc, 0x08, 0xb0, 0xba, 0x95, 0xf8, 0xc1,
	0xcb, 0xbf, 0x79, 0xa8, 0xf0, 0x46, 0x99, 0xc6, 0xa3, 0x2c, 0x30, 0xab, 0x82, 0xe0, 0xf8, 0xbc,
	0xe1, 0x9a, 0xb1, 0x49, 0x5e, 0xe5, 0x1b, 0xad, 0xff, 0xd3, 0xca, 0x96, 0xb8, 0xef, 0xb9, 0xbb,
	0x33, 0xf1, 0xc1, 0x77, 0x6d, 0x1c, 0xce, 0x13, 0x3a, 0x4f, 0xd2, 0x6b, 0x82, 0x1c, 0x92, 0x0f,
	0xa1, 0x36, 0xc6, 0xe2, 0x34, 0xe2, 0x59, 0x96, 0x5e, 0x18, 0x41, 0x90, 0x4e, 0x03, 0x71, 0x5f,
	0x4b, 0x1d, 0xdd, 0x38, 0x02, 0x0f, 0xa1, 0x22, 0xba, 0xd2, 0x82, 0x5d, 0xf8, 0x18, 0xca, 0x2c,
	0xf1, 0xc4, 0x1e, 0x5c, 0xf6, 0x7a, 0x98, 0x78, 0x89, 0x8b, 0x0c, 0xf6, 0xdf, 0x0d, 0xbc, 0xc6,
	0x62, 0x03, 0xf6, 0x1e, 0x54, 0xf8, 0x72, 0x33, 0x4d, 0x3b, 0x33, 0x36, 0x71, 0xfc, 0x1f, 0x0d,
	0x44, 0x4c, 0xac, 0xb7, 0x30, 0xe6, 0x37, 0x5d, 0xaf, 0xf4, 0x57, 0x09, 0xa2, 0x65, 0x66, 0xec,
	0xf1, 0xb9, 0xbf, 0x18, 0x41, 0x03, 0x00, 0xa9, 0x80, 0xbe, 0x22, 0xef, 0xc3, 0xae, 0x40, 0x48,
	0x06, 0x51, 0x05, 0x21, 0x62, 0x9b, 0xe3, 0xdd, 0xca, 0xf5, 0x6d, 0xbc, 0xd1, 0xb7, 0x31, 0x36,
	0xd2, 0x6a, 0xb7, 0xca, 0x85, 0x34, 0x82, 0xde, 0xa4, 0x86, 0xdd, 0xfd, 0x7f, 0xa8, 0x9e, 0xc9,
	0xae, 0xe5, 0x1a, 0xd4, 0x06, 0x27, 0x6e, 0xbf, 0x7d, 0x3c, 0x3a, 0x1b, 0x76, 0xdd, 0xe6, 0x16,
	0x69, 0x42, 0xbd, 0xdf, 0x1e, 0xb4, 0x7b, 0x5d, 0x57, 0x50, 0x8c, 0xbb, 0x8f, 0xb3, 0x17, 0x0f,
	0xd2, 0x00, 0x78, 0x7a, 0xdc, 0x76, 0x06, 0xa3, 0xd3, 0xee, 0x6f, 0x4e, 0x9b, 0x5b, 0xc4, 0x84,
	0x1d, 0xa7, 0xdf, 0xee, 0x75, 0x9b, 0x06, 0xff, 0x6c, 0x9f, 0x75, 0x9c, 0x93, 0xe6, 0x36, 0xff,
	0x7c, 0xe6, 0x74, 0xba, 0x27, 0xcd, 0x12, 0xa9, 0x43, 0xf5, 0xf8, 0xe4, 0xb0, 0x7d, 0xea, 0x9c,
	0x0c, 0x9a, 0xe5, 0xbb, 0x1f, 0xa3, 0x26, 0x8e, 0x02, 0xd7, 0xd4, 0x1f, 0xf6, 0x46, 0x67, 0x03,
	0xb7, 0xdb, 0xee, 0x34, 0xb7, 0x38, 0x23, 0x1f, 0xe3, 0xc8, 0x68, 0xfd, 0xbb, 0x0e, 0xe6, 0xa9,
	0x37, 0x7d, 0x79, 0xc8, 0x7d, 0x27, 0x9f, 0x43, 0x4d, 0xbc, 0xa6, 0x06, 0x2c, 0xa1, 0x31, 0xd1,
	0x8a, 0x5a, 0xf6, 0x92, 0x6b, 0x15, 0x91, 0x59, 0x64, 0x6f, 0x91, 0x23, 0x68, 0x64, 0xaf, 0x9b,
	0x42, 0x83, 0xd6, 0x83, 0xaa, 0x2f, 0xa9, 0xd6, 0x8a, 0x19, 0xd4, 0xf3, 0x29, 0xec, 0xe0, 0xa5,
	0x8c, 0xbc, 0xab, 0x32, 0xc9, 0x07, 0x3d, 0xab, 0x80, 0x8a, 0x62, 0x8f, 0xa0, 0x22, 0x9e, 0x64,
	0x74, 0xc7, 0xb3, 0xd7, 0x1e, 0xab, 0x88, 0x8c, 0x92, 0x5f, 0x41, 0x43, 0x7f, 0x60, 0x21, 0x37,
	0x55, 0xd6, 0x4b, 0xaf, 0x36, 0xd6, 0xad, 0x75, 0xd3, 0xa8, 0xb2, 0x97, 0xbe, 0x40, 0x3e, 0x8d,
	0xc3, 0x31, 0x65, 0x4c, 0x47, 0x42, 0x7d, 0x9b, 0xb4, 0xae, 0xab, 0x33, 0xda, 0x93, 0xa2, 0xbd,
	0x75, 0xc7, 0x20, 0x1d, 0xf5, 0xce, 0xa7, 0x69, 0x51, 0xdf, 0x75, 0x74, 0x2d, 0xda, 0xeb, 0x0d,
	0x6a, 0x71, 0xa0, 0xe9, 0xcc, 0xfa, 0x94, 0x31, 0x6f, 0x42, 0x9f, 0x2e, 0xce, 0xa7, 0x01, 0x7b,
	0x41, 0x56, 0xde, 0xc0, 0x75, 0x65, 0xda, 0x53, 0x9b, 0xbd, 0x45, 0xbe, 0x84, 0x1a, 0xff, 0x92,
	0x5a, 0x34, 0x5e, 0xed, 0x01, 0xc8, 0xb2, 0x8a, 0xa6, 0xc4, 0xcb, 0x03, 0x77, 0xea, 0x27, 0x06,
	0x69, 0x83, 0xd9, 0xf6, 0x7d, 0xd1, 0xa0, 0x93, 0x82, 0x0b, 0x8b, 0x38, 0x58, 0xac, 0x15, 0x33,
	0x08, 0x74, 0x1b, 0xcc, 0x0e, 0x9d, 0xae, 0x56, 0x21, 0xd2, 0xda, 0x5a, 0x31, 0x93, 0xaa, 0xd8,
	0xeb, 0xd1, 0xe4, 0x28, 0xbf, 0x14, 0xed, 0x5f, 0x66, 0xe6, 0x77, 0x3c, 0xab, 0x90, 0x8e, 0x2a,
	0x1c, 0xb8, 0x26, 0x0e, 0x6d, 0x9e, 0xef, 0x5f, 0xbc, 0x7e, 0x42, 0x5f, 0xeb, 0xc0, 0x68, 0xb7,
	0x27, 0x6b, 0xd5, 0x14, 0xaa, 0x7a, 0x0c, 0x35, 0xa5, 0xcf, 0x26, 0x1a, 0x88, 0xfa, 0x9d, 0xc2,
	0xba, 0xb1, 0x72, 0x0e, 0x35, 0x1d, 0x82, 0xf9, 0x65, 0x18, 0xcc, 0x85, 0x9e, 0xeb, 0x7a, 0x87,
	0xa2, 0xb4, 0xd6, 0xd6, 0xaa, 0xa9, 0x34, 0x90, 0xf7, 0x5c, 0x3a, 0x0b, 0x2f, 0x68, 0x3a, 0x51,
	0xa8, 0x28, 0x05, 0x79, 0xd5, 0x14, 0x2a, 0xfa, 0x1c, 0x76, 0x79, 0x1b, 0xda, 0x8b, 0x23, 0xf2,
	0xfe, 0xf2, 0xfa, 0xd3, 0x96, 0xd6, 0x2a, 0x9e, 0x40, 0xf1, 0x5f, 0x83, 0x99, 0xf9, 0xa1, 0x2b,
	0x50, 0x7a, 0x55, 0xab, 0x78, 0x02, 0x15, 0x7c, 0x01, 0xf5, 0x1e, 0x4d, 0xb2, 0xde, 0x4e, 0xdf,
	0xe4, 0xbc, 0xd5, 0xd4, 0x23, 0x45, 0x6d, 0x05, 0x11, 0xd1, 0x9a, 0xd8, 0x2a, 0x81, 0xe9, 0x12,
	0x6b, 0xde, 0xb7, 0xad, 0x55, 0xf2, 0x08, 0x2a, 0x6d, 0xdf, 0xef, 0xb3, 0x89, 0x5e, 0xa7, 0xb2,
	0x3e, 0xca, 0x2a, 0x22, 0xa3, 0x64, 0x0b, 0x2a, 0x3d, 0x9a, 0x70, 0x49, 0xb2, 0xc4, 0xc2, 0xc5,
	0x2e, 0xd1, 0x50, 0xe6, 0x57, 0x00, 0x43, 0x94, 0xc1, 0xd3, 0x60, 0xbf, 0xe8, 0xe4, 0x5c, 0x8e,
	0xec, 0xfc, 0x00, 0x15, 0xde, 0x76, 0xe8, 0xb4, 0xc8, 0xdb, 0x14, 0xf2, 0x22, 0x32, 0x97, 0x3c,
	0xaf, 0xe0, 0x6f, 0xc6, 0x07, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x32, 0xbd, 0xc1, 0x18, 0xa2,
	0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TalkCloudClient is the client API for TalkCloud service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TalkCloudClient interface {
	// 注册
	AppRegister(ctx context.Context, in *AppRegReq, opts ...grpc.CallOption) (*AppRegRsp, error)
	DeviceRegister(ctx context.Context, in *DeviceRegReq, opts ...grpc.CallOption) (*DeviceRegRsp, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRsp, error)
	Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutRsp, error)
	SetLockGroupId(ctx context.Context, in *SetLockGroupIdReq, opts ...grpc.CallOption) (*SetLockGroupIdResp, error)
	// 推送初次登录的数据
	LoginProcess(ctx context.Context, opts ...grpc.CallOption) (TalkCloud_LoginProcessClient, error)
	// 推送保活数据
	KeepAlive(ctx context.Context, opts ...grpc.CallOption) (TalkCloud_KeepAliveClient, error)
	// 推送im数据
	ImMessagePublish(ctx context.Context, in *ImMsgReqData, opts ...grpc.CallOption) (*ImMsgRespData, error)
	DataPublish(ctx context.Context, opts ...grpc.CallOption) (TalkCloud_DataPublishClient, error)
	// 好友管理
	AddFriend(ctx context.Context, in *FriendNewReq, opts ...grpc.CallOption) (*FriendNewRsp, error)
	DelFriend(ctx context.Context, in *FriendDelReq, opts ...grpc.CallOption) (*FriendDelRsp, error)
	GetFriendList(ctx context.Context, in *FriendsReq, opts ...grpc.CallOption) (*FriendsRsp, error)
	SearchUserByKey(ctx context.Context, in *UserSearchReq, opts ...grpc.CallOption) (*UserSearchRsp, error)
	// 组管理
	CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error)
	JoinGroup(ctx context.Context, in *GrpUserAddReq, opts ...grpc.CallOption) (*GrpUserAddRsp, error)
	RemoveGrpUser(ctx context.Context, in *GrpUserDelReq, opts ...grpc.CallOption) (*GrpUserDelRsp, error)
	ExitGrp(ctx context.Context, in *UserExitReq, opts ...grpc.CallOption) (*UserExitRsp, error)
	RemoveGrp(ctx context.Context, in *GroupDelReq, opts ...grpc.CallOption) (*GroupDelRsp, error)
	GetGroupList(ctx context.Context, in *GrpListReq, opts ...grpc.CallOption) (*GroupListRsp, error)
	SearchGroup(ctx context.Context, in *GrpSearchReq, opts ...grpc.CallOption) (*GroupListRsp, error)
	// 离线消息拉取
	AddMsg(ctx context.Context, in *MsgNewReq, opts ...grpc.CallOption) (*MsgNewRsp, error)
	GetMsg(ctx context.Context, in *MsgReq, opts ...grpc.CallOption) (*MsgRsp, error)
	SetMsgStat(ctx context.Context, in *MsgStatReq, opts ...grpc.CallOption) (*MsgStatRsp, error)
	DelMsg(ctx context.Context, in *MsgDelReq, opts ...grpc.CallOption) (*MsgDelRsp, error)
}

type talkCloudClient struct {
	cc *grpc.ClientConn
}

func NewTalkCloudClient(cc *grpc.ClientConn) TalkCloudClient {
	return &talkCloudClient{cc}
}

func (c *talkCloudClient) AppRegister(ctx context.Context, in *AppRegReq, opts ...grpc.CallOption) (*AppRegRsp, error) {
	out := new(AppRegRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/AppRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) DeviceRegister(ctx context.Context, in *DeviceRegReq, opts ...grpc.CallOption) (*DeviceRegRsp, error) {
	out := new(DeviceRegRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/DeviceRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRsp, error) {
	out := new(LoginRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutRsp, error) {
	out := new(LogoutRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) SetLockGroupId(ctx context.Context, in *SetLockGroupIdReq, opts ...grpc.CallOption) (*SetLockGroupIdResp, error) {
	out := new(SetLockGroupIdResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/SetLockGroupId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) LoginProcess(ctx context.Context, opts ...grpc.CallOption) (TalkCloud_LoginProcessClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TalkCloud_serviceDesc.Streams[0], "/talk_cloud.TalkCloud/LoginProcess", opts...)
	if err != nil {
		return nil, err
	}
	x := &talkCloudLoginProcessClient{stream}
	return x, nil
}

type TalkCloud_LoginProcessClient interface {
	Send(*LoginReqData) error
	CloseAndRecv() (*LoginRespData, error)
	grpc.ClientStream
}

type talkCloudLoginProcessClient struct {
	grpc.ClientStream
}

func (x *talkCloudLoginProcessClient) Send(m *LoginReqData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *talkCloudLoginProcessClient) CloseAndRecv() (*LoginRespData, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(LoginRespData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *talkCloudClient) KeepAlive(ctx context.Context, opts ...grpc.CallOption) (TalkCloud_KeepAliveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TalkCloud_serviceDesc.Streams[1], "/talk_cloud.TalkCloud/KeepAlive", opts...)
	if err != nil {
		return nil, err
	}
	x := &talkCloudKeepAliveClient{stream}
	return x, nil
}

type TalkCloud_KeepAliveClient interface {
	Send(*KeepAliveReq) error
	CloseAndRecv() (*KeepAliveResp, error)
	grpc.ClientStream
}

type talkCloudKeepAliveClient struct {
	grpc.ClientStream
}

func (x *talkCloudKeepAliveClient) Send(m *KeepAliveReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *talkCloudKeepAliveClient) CloseAndRecv() (*KeepAliveResp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(KeepAliveResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *talkCloudClient) ImMessagePublish(ctx context.Context, in *ImMsgReqData, opts ...grpc.CallOption) (*ImMsgRespData, error) {
	out := new(ImMsgRespData)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/ImMessagePublish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) DataPublish(ctx context.Context, opts ...grpc.CallOption) (TalkCloud_DataPublishClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TalkCloud_serviceDesc.Streams[2], "/talk_cloud.TalkCloud/DataPublish", opts...)
	if err != nil {
		return nil, err
	}
	x := &talkCloudDataPublishClient{stream}
	return x, nil
}

type TalkCloud_DataPublishClient interface {
	Send(*StreamRequest) error
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type talkCloudDataPublishClient struct {
	grpc.ClientStream
}

func (x *talkCloudDataPublishClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *talkCloudDataPublishClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *talkCloudClient) AddFriend(ctx context.Context, in *FriendNewReq, opts ...grpc.CallOption) (*FriendNewRsp, error) {
	out := new(FriendNewRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/AddFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) DelFriend(ctx context.Context, in *FriendDelReq, opts ...grpc.CallOption) (*FriendDelRsp, error) {
	out := new(FriendDelRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/DelFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) GetFriendList(ctx context.Context, in *FriendsReq, opts ...grpc.CallOption) (*FriendsRsp, error) {
	out := new(FriendsRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/GetFriendList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) SearchUserByKey(ctx context.Context, in *UserSearchReq, opts ...grpc.CallOption) (*UserSearchRsp, error) {
	out := new(UserSearchRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/SearchUserByKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error) {
	out := new(CreateGroupResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) JoinGroup(ctx context.Context, in *GrpUserAddReq, opts ...grpc.CallOption) (*GrpUserAddRsp, error) {
	out := new(GrpUserAddRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/JoinGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) RemoveGrpUser(ctx context.Context, in *GrpUserDelReq, opts ...grpc.CallOption) (*GrpUserDelRsp, error) {
	out := new(GrpUserDelRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/RemoveGrpUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) ExitGrp(ctx context.Context, in *UserExitReq, opts ...grpc.CallOption) (*UserExitRsp, error) {
	out := new(UserExitRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/ExitGrp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) RemoveGrp(ctx context.Context, in *GroupDelReq, opts ...grpc.CallOption) (*GroupDelRsp, error) {
	out := new(GroupDelRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/RemoveGrp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) GetGroupList(ctx context.Context, in *GrpListReq, opts ...grpc.CallOption) (*GroupListRsp, error) {
	out := new(GroupListRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/GetGroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) SearchGroup(ctx context.Context, in *GrpSearchReq, opts ...grpc.CallOption) (*GroupListRsp, error) {
	out := new(GroupListRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/SearchGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) AddMsg(ctx context.Context, in *MsgNewReq, opts ...grpc.CallOption) (*MsgNewRsp, error) {
	out := new(MsgNewRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/AddMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) GetMsg(ctx context.Context, in *MsgReq, opts ...grpc.CallOption) (*MsgRsp, error) {
	out := new(MsgRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/GetMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) SetMsgStat(ctx context.Context, in *MsgStatReq, opts ...grpc.CallOption) (*MsgStatRsp, error) {
	out := new(MsgStatRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/SetMsgStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *talkCloudClient) DelMsg(ctx context.Context, in *MsgDelReq, opts ...grpc.CallOption) (*MsgDelRsp, error) {
	out := new(MsgDelRsp)
	err := c.cc.Invoke(ctx, "/talk_cloud.TalkCloud/DelMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TalkCloudServer is the server API for TalkCloud service.
type TalkCloudServer interface {
	// 注册
	AppRegister(context.Context, *AppRegReq) (*AppRegRsp, error)
	DeviceRegister(context.Context, *DeviceRegReq) (*DeviceRegRsp, error)
	Login(context.Context, *LoginReq) (*LoginRsp, error)
	Logout(context.Context, *LogoutReq) (*LogoutRsp, error)
	SetLockGroupId(context.Context, *SetLockGroupIdReq) (*SetLockGroupIdResp, error)
	// 推送初次登录的数据
	LoginProcess(TalkCloud_LoginProcessServer) error
	// 推送保活数据
	KeepAlive(TalkCloud_KeepAliveServer) error
	// 推送im数据
	ImMessagePublish(context.Context, *ImMsgReqData) (*ImMsgRespData, error)
	DataPublish(TalkCloud_DataPublishServer) error
	// 好友管理
	AddFriend(context.Context, *FriendNewReq) (*FriendNewRsp, error)
	DelFriend(context.Context, *FriendDelReq) (*FriendDelRsp, error)
	GetFriendList(context.Context, *FriendsReq) (*FriendsRsp, error)
	SearchUserByKey(context.Context, *UserSearchReq) (*UserSearchRsp, error)
	// 组管理
	CreateGroup(context.Context, *CreateGroupReq) (*CreateGroupResp, error)
	JoinGroup(context.Context, *GrpUserAddReq) (*GrpUserAddRsp, error)
	RemoveGrpUser(context.Context, *GrpUserDelReq) (*GrpUserDelRsp, error)
	ExitGrp(context.Context, *UserExitReq) (*UserExitRsp, error)
	RemoveGrp(context.Context, *GroupDelReq) (*GroupDelRsp, error)
	GetGroupList(context.Context, *GrpListReq) (*GroupListRsp, error)
	SearchGroup(context.Context, *GrpSearchReq) (*GroupListRsp, error)
	// 离线消息拉取
	AddMsg(context.Context, *MsgNewReq) (*MsgNewRsp, error)
	GetMsg(context.Context, *MsgReq) (*MsgRsp, error)
	SetMsgStat(context.Context, *MsgStatReq) (*MsgStatRsp, error)
	DelMsg(context.Context, *MsgDelReq) (*MsgDelRsp, error)
}

// UnimplementedTalkCloudServer can be embedded to have forward compatible implementations.
type UnimplementedTalkCloudServer struct {
}

func (*UnimplementedTalkCloudServer) AppRegister(ctx context.Context, req *AppRegReq) (*AppRegRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppRegister not implemented")
}
func (*UnimplementedTalkCloudServer) DeviceRegister(ctx context.Context, req *DeviceRegReq) (*DeviceRegRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeviceRegister not implemented")
}
func (*UnimplementedTalkCloudServer) Login(ctx context.Context, req *LoginReq) (*LoginRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedTalkCloudServer) Logout(ctx context.Context, req *LogoutReq) (*LogoutRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedTalkCloudServer) SetLockGroupId(ctx context.Context, req *SetLockGroupIdReq) (*SetLockGroupIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLockGroupId not implemented")
}
func (*UnimplementedTalkCloudServer) LoginProcess(srv TalkCloud_LoginProcessServer) error {
	return status.Errorf(codes.Unimplemented, "method LoginProcess not implemented")
}
func (*UnimplementedTalkCloudServer) KeepAlive(srv TalkCloud_KeepAliveServer) error {
	return status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedTalkCloudServer) ImMessagePublish(ctx context.Context, req *ImMsgReqData) (*ImMsgRespData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImMessagePublish not implemented")
}
func (*UnimplementedTalkCloudServer) DataPublish(srv TalkCloud_DataPublishServer) error {
	return status.Errorf(codes.Unimplemented, "method DataPublish not implemented")
}
func (*UnimplementedTalkCloudServer) AddFriend(ctx context.Context, req *FriendNewReq) (*FriendNewRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFriend not implemented")
}
func (*UnimplementedTalkCloudServer) DelFriend(ctx context.Context, req *FriendDelReq) (*FriendDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelFriend not implemented")
}
func (*UnimplementedTalkCloudServer) GetFriendList(ctx context.Context, req *FriendsReq) (*FriendsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFriendList not implemented")
}
func (*UnimplementedTalkCloudServer) SearchUserByKey(ctx context.Context, req *UserSearchReq) (*UserSearchRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUserByKey not implemented")
}
func (*UnimplementedTalkCloudServer) CreateGroup(ctx context.Context, req *CreateGroupReq) (*CreateGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedTalkCloudServer) JoinGroup(ctx context.Context, req *GrpUserAddReq) (*GrpUserAddRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGroup not implemented")
}
func (*UnimplementedTalkCloudServer) RemoveGrpUser(ctx context.Context, req *GrpUserDelReq) (*GrpUserDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGrpUser not implemented")
}
func (*UnimplementedTalkCloudServer) ExitGrp(ctx context.Context, req *UserExitReq) (*UserExitRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExitGrp not implemented")
}
func (*UnimplementedTalkCloudServer) RemoveGrp(ctx context.Context, req *GroupDelReq) (*GroupDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGrp not implemented")
}
func (*UnimplementedTalkCloudServer) GetGroupList(ctx context.Context, req *GrpListReq) (*GroupListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupList not implemented")
}
func (*UnimplementedTalkCloudServer) SearchGroup(ctx context.Context, req *GrpSearchReq) (*GroupListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchGroup not implemented")
}
func (*UnimplementedTalkCloudServer) AddMsg(ctx context.Context, req *MsgNewReq) (*MsgNewRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMsg not implemented")
}
func (*UnimplementedTalkCloudServer) GetMsg(ctx context.Context, req *MsgReq) (*MsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMsg not implemented")
}
func (*UnimplementedTalkCloudServer) SetMsgStat(ctx context.Context, req *MsgStatReq) (*MsgStatRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMsgStat not implemented")
}
func (*UnimplementedTalkCloudServer) DelMsg(ctx context.Context, req *MsgDelReq) (*MsgDelRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelMsg not implemented")
}

func RegisterTalkCloudServer(s *grpc.Server, srv TalkCloudServer) {
	s.RegisterService(&_TalkCloud_serviceDesc, srv)
}

func _TalkCloud_AppRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).AppRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/AppRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).AppRegister(ctx, req.(*AppRegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_DeviceRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceRegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).DeviceRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/DeviceRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).DeviceRegister(ctx, req.(*DeviceRegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).Logout(ctx, req.(*LogoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_SetLockGroupId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLockGroupIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).SetLockGroupId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/SetLockGroupId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).SetLockGroupId(ctx, req.(*SetLockGroupIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_LoginProcess_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TalkCloudServer).LoginProcess(&talkCloudLoginProcessServer{stream})
}

type TalkCloud_LoginProcessServer interface {
	SendAndClose(*LoginRespData) error
	Recv() (*LoginReqData, error)
	grpc.ServerStream
}

type talkCloudLoginProcessServer struct {
	grpc.ServerStream
}

func (x *talkCloudLoginProcessServer) SendAndClose(m *LoginRespData) error {
	return x.ServerStream.SendMsg(m)
}

func (x *talkCloudLoginProcessServer) Recv() (*LoginReqData, error) {
	m := new(LoginReqData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _TalkCloud_KeepAlive_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TalkCloudServer).KeepAlive(&talkCloudKeepAliveServer{stream})
}

type TalkCloud_KeepAliveServer interface {
	SendAndClose(*KeepAliveResp) error
	Recv() (*KeepAliveReq, error)
	grpc.ServerStream
}

type talkCloudKeepAliveServer struct {
	grpc.ServerStream
}

func (x *talkCloudKeepAliveServer) SendAndClose(m *KeepAliveResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *talkCloudKeepAliveServer) Recv() (*KeepAliveReq, error) {
	m := new(KeepAliveReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _TalkCloud_ImMessagePublish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImMsgReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).ImMessagePublish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/ImMessagePublish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).ImMessagePublish(ctx, req.(*ImMsgReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_DataPublish_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TalkCloudServer).DataPublish(&talkCloudDataPublishServer{stream})
}

type TalkCloud_DataPublishServer interface {
	Send(*StreamResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type talkCloudDataPublishServer struct {
	grpc.ServerStream
}

func (x *talkCloudDataPublishServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *talkCloudDataPublishServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _TalkCloud_AddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendNewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).AddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/AddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).AddFriend(ctx, req.(*FriendNewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_DelFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).DelFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/DelFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).DelFriend(ctx, req.(*FriendDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_GetFriendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).GetFriendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/GetFriendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).GetFriendList(ctx, req.(*FriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_SearchUserByKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).SearchUserByKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/SearchUserByKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).SearchUserByKey(ctx, req.(*UserSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).CreateGroup(ctx, req.(*CreateGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_JoinGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpUserAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).JoinGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/JoinGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).JoinGroup(ctx, req.(*GrpUserAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_RemoveGrpUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpUserDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).RemoveGrpUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/RemoveGrpUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).RemoveGrpUser(ctx, req.(*GrpUserDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_ExitGrp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserExitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).ExitGrp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/ExitGrp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).ExitGrp(ctx, req.(*UserExitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_RemoveGrp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).RemoveGrp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/RemoveGrp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).RemoveGrp(ctx, req.(*GroupDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_GetGroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).GetGroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/GetGroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).GetGroupList(ctx, req.(*GrpListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_SearchGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).SearchGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/SearchGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).SearchGroup(ctx, req.(*GrpSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_AddMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).AddMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/AddMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).AddMsg(ctx, req.(*MsgNewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_GetMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).GetMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/GetMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).GetMsg(ctx, req.(*MsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_SetMsgStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).SetMsgStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/SetMsgStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).SetMsgStat(ctx, req.(*MsgStatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TalkCloud_DelMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TalkCloudServer).DelMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.TalkCloud/DelMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TalkCloudServer).DelMsg(ctx, req.(*MsgDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TalkCloud_serviceDesc = grpc.ServiceDesc{
	ServiceName: "talk_cloud.TalkCloud",
	HandlerType: (*TalkCloudServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppRegister",
			Handler:    _TalkCloud_AppRegister_Handler,
		},
		{
			MethodName: "DeviceRegister",
			Handler:    _TalkCloud_DeviceRegister_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _TalkCloud_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _TalkCloud_Logout_Handler,
		},
		{
			MethodName: "SetLockGroupId",
			Handler:    _TalkCloud_SetLockGroupId_Handler,
		},
		{
			MethodName: "ImMessagePublish",
			Handler:    _TalkCloud_ImMessagePublish_Handler,
		},
		{
			MethodName: "AddFriend",
			Handler:    _TalkCloud_AddFriend_Handler,
		},
		{
			MethodName: "DelFriend",
			Handler:    _TalkCloud_DelFriend_Handler,
		},
		{
			MethodName: "GetFriendList",
			Handler:    _TalkCloud_GetFriendList_Handler,
		},
		{
			MethodName: "SearchUserByKey",
			Handler:    _TalkCloud_SearchUserByKey_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _TalkCloud_CreateGroup_Handler,
		},
		{
			MethodName: "JoinGroup",
			Handler:    _TalkCloud_JoinGroup_Handler,
		},
		{
			MethodName: "RemoveGrpUser",
			Handler:    _TalkCloud_RemoveGrpUser_Handler,
		},
		{
			MethodName: "ExitGrp",
			Handler:    _TalkCloud_ExitGrp_Handler,
		},
		{
			MethodName: "RemoveGrp",
			Handler:    _TalkCloud_RemoveGrp_Handler,
		},
		{
			MethodName: "GetGroupList",
			Handler:    _TalkCloud_GetGroupList_Handler,
		},
		{
			MethodName: "SearchGroup",
			Handler:    _TalkCloud_SearchGroup_Handler,
		},
		{
			MethodName: "AddMsg",
			Handler:    _TalkCloud_AddMsg_Handler,
		},
		{
			MethodName: "GetMsg",
			Handler:    _TalkCloud_GetMsg_Handler,
		},
		{
			MethodName: "SetMsgStat",
			Handler:    _TalkCloud_SetMsgStat_Handler,
		},
		{
			MethodName: "DelMsg",
			Handler:    _TalkCloud_DelMsg_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LoginProcess",
			Handler:       _TalkCloud_LoginProcess_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "KeepAlive",
			Handler:       _TalkCloud_KeepAlive_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DataPublish",
			Handler:       _TalkCloud_DataPublish_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "talk_cloud_app.proto",
}
