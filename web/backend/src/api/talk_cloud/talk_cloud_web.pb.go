// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud_web.proto

package talk_cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AccountClassReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountClassReq) Reset()         { *m = AccountClassReq{} }
func (m *AccountClassReq) String() string { return proto.CompactTextString(m) }
func (*AccountClassReq) ProtoMessage()    {}
func (*AccountClassReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_bee75d1763415d2b, []int{0}
}

func (m *AccountClassReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountClassReq.Unmarshal(m, b)
}
func (m *AccountClassReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountClassReq.Marshal(b, m, deterministic)
}
func (m *AccountClassReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountClassReq.Merge(m, src)
}
func (m *AccountClassReq) XXX_Size() int {
	return xxx_messageInfo_AccountClassReq.Size(m)
}
func (m *AccountClassReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountClassReq.DiscardUnknown(m)
}

var xxx_messageInfo_AccountClassReq proto.InternalMessageInfo

func (m *AccountClassReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AccountClassResp struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountClassResp) Reset()         { *m = AccountClassResp{} }
func (m *AccountClassResp) String() string { return proto.CompactTextString(m) }
func (*AccountClassResp) ProtoMessage()    {}
func (*AccountClassResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_bee75d1763415d2b, []int{1}
}

func (m *AccountClassResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountClassResp.Unmarshal(m, b)
}
func (m *AccountClassResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountClassResp.Marshal(b, m, deterministic)
}
func (m *AccountClassResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountClassResp.Merge(m, src)
}
func (m *AccountClassResp) XXX_Size() int {
	return xxx_messageInfo_AccountClassResp.Size(m)
}
func (m *AccountClassResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountClassResp.DiscardUnknown(m)
}

var xxx_messageInfo_AccountClassResp proto.InternalMessageInfo

func (m *AccountClassResp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ImportDeviceReq struct {
	AccountId            int32    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	DeviceImei           []string `protobuf:"bytes,2,rep,name=deviceImei,proto3" json:"deviceImei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportDeviceReq) Reset()         { *m = ImportDeviceReq{} }
func (m *ImportDeviceReq) String() string { return proto.CompactTextString(m) }
func (*ImportDeviceReq) ProtoMessage()    {}
func (*ImportDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_bee75d1763415d2b, []int{2}
}

func (m *ImportDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDeviceReq.Unmarshal(m, b)
}
func (m *ImportDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDeviceReq.Marshal(b, m, deterministic)
}
func (m *ImportDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDeviceReq.Merge(m, src)
}
func (m *ImportDeviceReq) XXX_Size() int {
	return xxx_messageInfo_ImportDeviceReq.Size(m)
}
func (m *ImportDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDeviceReq proto.InternalMessageInfo

func (m *ImportDeviceReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ImportDeviceReq) GetDeviceImei() []string {
	if m != nil {
		return m.DeviceImei
	}
	return nil
}

type ImportDeviceResp struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportDeviceResp) Reset()         { *m = ImportDeviceResp{} }
func (m *ImportDeviceResp) String() string { return proto.CompactTextString(m) }
func (*ImportDeviceResp) ProtoMessage()    {}
func (*ImportDeviceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_bee75d1763415d2b, []int{3}
}

func (m *ImportDeviceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportDeviceResp.Unmarshal(m, b)
}
func (m *ImportDeviceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportDeviceResp.Marshal(b, m, deterministic)
}
func (m *ImportDeviceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportDeviceResp.Merge(m, src)
}
func (m *ImportDeviceResp) XXX_Size() int {
	return xxx_messageInfo_ImportDeviceResp.Size(m)
}
func (m *ImportDeviceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportDeviceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportDeviceResp proto.InternalMessageInfo

func (m *ImportDeviceResp) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type Result struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	StateCode            int32    `protobuf:"varint,2,opt,name=StateCode,proto3" json:"StateCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_bee75d1763415d2b, []int{4}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Result) GetStateCode() int32 {
	if m != nil {
		return m.StateCode
	}
	return 0
}

func init() {
	proto.RegisterType((*AccountClassReq)(nil), "talk_cloud.AccountClassReq")
	proto.RegisterType((*AccountClassResp)(nil), "talk_cloud.AccountClassResp")
	proto.RegisterType((*ImportDeviceReq)(nil), "talk_cloud.ImportDeviceReq")
	proto.RegisterType((*ImportDeviceResp)(nil), "talk_cloud.ImportDeviceResp")
	proto.RegisterType((*Result)(nil), "talk_cloud.Result")
}

func init() { proto.RegisterFile("talk_cloud_web.proto", fileDescriptor_bee75d1763415d2b) }

var fileDescriptor_bee75d1763415d2b = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xdb, 0x54, 0x03, 0x19, 0xc1, 0x84, 0xc1, 0x43, 0xd0, 0x22, 0x65, 0x41, 0x28, 0x1e,
	0x72, 0xa8, 0x17, 0x4f, 0x82, 0x56, 0x90, 0x5c, 0x14, 0xb7, 0x07, 0x8f, 0x25, 0xc9, 0x0e, 0x12,
	0x4c, 0xba, 0x6b, 0x76, 0xa3, 0xf8, 0xa9, 0xfc, 0x8a, 0x92, 0x4d, 0x35, 0x7f, 0xc0, 0xdb, 0xf0,
	0xe6, 0xed, 0x6f, 0x66, 0xde, 0xc2, 0x89, 0x49, 0x8a, 0xb7, 0x6d, 0x56, 0xc8, 0x5a, 0x6c, 0x3f,
	0x29, 0x8d, 0x54, 0x25, 0x8d, 0x44, 0xe8, 0x54, 0x76, 0x01, 0xfe, 0x6d, 0x96, 0xc9, 0x7a, 0x67,
	0xd6, 0x45, 0xa2, 0x35, 0xa7, 0x77, 0x44, 0x38, 0xd8, 0x25, 0x25, 0x85, 0xd3, 0xc5, 0x74, 0xe9,
	0x71, 0x5b, 0x33, 0x06, 0xc1, 0xd0, 0xa6, 0x15, 0x1e, 0x83, 0x93, 0x0b, 0xeb, 0x3a, 0xe4, 0x4e,
	0x2e, 0xd8, 0x13, 0xf8, 0x71, 0xa9, 0x64, 0x65, 0xee, 0xe9, 0x23, 0xcf, 0xa8, 0x41, 0xcd, 0xc1,
	0x4b, 0xda, 0x67, 0xf1, 0xaf, 0xb3, 0x13, 0xf0, 0x1c, 0x40, 0x58, 0x6b, 0x5c, 0x52, 0x1e, 0x3a,
	0x8b, 0xd9, 0xd2, 0xe3, 0x3d, 0x85, 0xdd, 0x40, 0x30, 0x04, 0x6a, 0x85, 0x97, 0xe0, 0x56, 0xa4,
	0xeb, 0xc2, 0x58, 0xdc, 0xd1, 0x0a, 0xa3, 0xee, 0x98, 0x88, 0xdb, 0x0e, 0xdf, 0x3b, 0xd8, 0x35,
	0xb8, 0xad, 0x82, 0x01, 0xcc, 0x4a, 0xfd, 0xba, 0xbf, 0xa8, 0x29, 0x9b, 0xcd, 0x36, 0x26, 0x31,
	0xb4, 0x96, 0x82, 0x42, 0xa7, 0xdd, 0xec, 0x4f, 0x58, 0x7d, 0x4f, 0x01, 0x5e, 0x28, 0xdd, 0x50,
	0xd5, 0x0c, 0xc6, 0x47, 0xf0, 0x1f, 0xc8, 0xf4, 0x03, 0xc0, 0xb3, 0xfe, 0xdc, 0x51, 0x82, 0xa7,
	0xf3, 0xff, 0x9b, 0x5a, 0xb1, 0x09, 0x3e, 0x03, 0xf6, 0x0f, 0xbb, 0xfb, 0xe2, 0x52, 0x9a, 0x21,
	0x72, 0x94, 0xe4, 0x10, 0x39, 0x4e, 0x85, 0x4d, 0x52, 0xd7, 0x7e, 0xed, 0xd5, 0x4f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x12, 0x7a, 0x88, 0x88, 0xf2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebServiceClient is the client API for WebService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebServiceClient interface {
	GetAccountClass(ctx context.Context, in *AccountClassReq, opts ...grpc.CallOption) (*AccountClassResp, error)
	ImportDeviceByRoot(ctx context.Context, in *ImportDeviceReq, opts ...grpc.CallOption) (*ImportDeviceResp, error)
}

type webServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebServiceClient(cc *grpc.ClientConn) WebServiceClient {
	return &webServiceClient{cc}
}

func (c *webServiceClient) GetAccountClass(ctx context.Context, in *AccountClassReq, opts ...grpc.CallOption) (*AccountClassResp, error) {
	out := new(AccountClassResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.WebService/GetAccountClass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webServiceClient) ImportDeviceByRoot(ctx context.Context, in *ImportDeviceReq, opts ...grpc.CallOption) (*ImportDeviceResp, error) {
	out := new(ImportDeviceResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.WebService/ImportDeviceByRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebServiceServer is the server API for WebService service.
type WebServiceServer interface {
	GetAccountClass(context.Context, *AccountClassReq) (*AccountClassResp, error)
	ImportDeviceByRoot(context.Context, *ImportDeviceReq) (*ImportDeviceResp, error)
}

// UnimplementedWebServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWebServiceServer struct {
}

func (*UnimplementedWebServiceServer) GetAccountClass(ctx context.Context, req *AccountClassReq) (*AccountClassResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountClass not implemented")
}
func (*UnimplementedWebServiceServer) ImportDeviceByRoot(ctx context.Context, req *ImportDeviceReq) (*ImportDeviceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportDeviceByRoot not implemented")
}

func RegisterWebServiceServer(s *grpc.Server, srv WebServiceServer) {
	s.RegisterService(&_WebService_serviceDesc, srv)
}

func _WebService_GetAccountClass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountClassReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServiceServer).GetAccountClass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.WebService/GetAccountClass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServiceServer).GetAccountClass(ctx, req.(*AccountClassReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebService_ImportDeviceByRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServiceServer).ImportDeviceByRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.WebService/ImportDeviceByRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServiceServer).ImportDeviceByRoot(ctx, req.(*ImportDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "talk_cloud.WebService",
	HandlerType: (*WebServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccountClass",
			Handler:    _WebService_GetAccountClass_Handler,
		},
		{
			MethodName: "ImportDeviceByRoot",
			Handler:    _WebService_ImportDeviceByRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "talk_cloud_web.proto",
}
